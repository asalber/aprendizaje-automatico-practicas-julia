{
  "hash": "5926da2e5f25303f6501b503f71dcde2",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Árboles de decisión\nlang: es\n---\n\nLos árboles de decisión son modelos de aprendizaje simples e intuitivos que pueden utilizarse para tanto para predecir variables cuantitativas (regresión) como categóricas (clasificación). Esta práctica contiene ejercicios que muestran como construir modelos de aprendizaje basados en árboles de decisión con Julia.\n\n## Ejercicios Resueltos\n\nPara la realización de esta práctica se requieren los siguientes paquetes:\n\n```julia\nusing CSV  # Para la lectura de archivos CSV.\nusing DataFrames  # Para el manejo de datos tabulares.\nusing Tidier # Para el preprocesamiento de datos.\nusing PrettyTables  # Para mostrar tablas formateadas.\nusing Plots  # Para el dibujo de gráficas.\nusing GLMakie  # Para obtener gráficos interactivos.\nusing AlgebraOfGraphics # Para generar gráficos mediante la gramática de gráficos.\nusing DecisionTree # Para construir árboles de decisión.\nusing GraphMakie # Para la visualización de árboles de decisión.\n```\n\n:::{#exr-arboles-decision-1}\nEl conjunto de datos [`tenis.csv`](/datos/tenis.csv) contiene información sobre las condiciones meteorológicas de varios días y si se pudo jugar al tenis o no.\n\na.  Cargar los datos del archivo `tenis.csv` en un data frame.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#8422a3ba .cell execution_count=2}\n    ``` {.julia .cell-code}\n    using CSV, DataFrames\n    df = CSV.read(\"datos/tenis.csv\", DataFrame)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=149}\n    ```{=html}\n    <div><div style = \"float: left;\"><span>14×5 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">Cielo</th><th style = \"text-align: left;\">Temperatura</th><th style = \"text-align: left;\">Humedad</th><th style = \"text-align: left;\">Viento</th><th style = \"text-align: left;\">Tenis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"String7\" style = \"text-align: left;\">String7</th><th title = \"String7\" style = \"text-align: left;\">String7</th><th title = \"String3\" style = \"text-align: left;\">String3</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Soleado</td><td style = \"text-align: left;\">Caluroso</td><td style = \"text-align: left;\">Alta</td><td style = \"text-align: left;\">Suave</td><td style = \"text-align: left;\">No</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Soleado</td><td style = \"text-align: left;\">Caluroso</td><td style = \"text-align: left;\">Alta</td><td style = \"text-align: left;\">Fuerte</td><td style = \"text-align: left;\">No</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Nublado</td><td style = \"text-align: left;\">Caluroso</td><td style = \"text-align: left;\">Alta</td><td style = \"text-align: left;\">Suave</td><td style = \"text-align: left;\">Sí</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Lluvioso</td><td style = \"text-align: left;\">Moderado</td><td style = \"text-align: left;\">Alta</td><td style = \"text-align: left;\">Suave</td><td style = \"text-align: left;\">Sí</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Lluvioso</td><td style = \"text-align: left;\">Frío</td><td style = \"text-align: left;\">Normal</td><td style = \"text-align: left;\">Suave</td><td style = \"text-align: left;\">Sí</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Lluvioso</td><td style = \"text-align: left;\">Frío</td><td style = \"text-align: left;\">Normal</td><td style = \"text-align: left;\">Fuerte</td><td style = \"text-align: left;\">No</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Nublado</td><td style = \"text-align: left;\">Frío</td><td style = \"text-align: left;\">Normal</td><td style = \"text-align: left;\">Fuerte</td><td style = \"text-align: left;\">Sí</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Soleado</td><td style = \"text-align: left;\">Moderado</td><td style = \"text-align: left;\">Alta</td><td style = \"text-align: left;\">Suave</td><td style = \"text-align: left;\">No</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">Soleado</td><td style = \"text-align: left;\">Frío</td><td style = \"text-align: left;\">Normal</td><td style = \"text-align: left;\">Suave</td><td style = \"text-align: left;\">Sí</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">Lluvioso</td><td style = \"text-align: left;\">Moderado</td><td style = \"text-align: left;\">Normal</td><td style = \"text-align: left;\">Suave</td><td style = \"text-align: left;\">Sí</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">Soleado</td><td style = \"text-align: left;\">Moderado</td><td style = \"text-align: left;\">Normal</td><td style = \"text-align: left;\">Fuerte</td><td style = \"text-align: left;\">Sí</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">Nublado</td><td style = \"text-align: left;\">Moderado</td><td style = \"text-align: left;\">Alta</td><td style = \"text-align: left;\">Fuerte</td><td style = \"text-align: left;\">Sí</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">Nublado</td><td style = \"text-align: left;\">Caluroso</td><td style = \"text-align: left;\">Normal</td><td style = \"text-align: left;\">Suave</td><td style = \"text-align: left;\">Sí</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">14</td><td style = \"text-align: left;\">Lluvioso</td><td style = \"text-align: left;\">Moderado</td><td style = \"text-align: left;\">Alta</td><td style = \"text-align: left;\">Fuerte</td><td style = \"text-align: left;\">No</td></tr></tbody></table></div>\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Crear un diagrama de barras que muestre la distribución de frecuencias de cada variable meteorológica según si se pudo jugar al tenis o no. ¿Qué variable meteorológica parece tener más influencia en la decisión de jugar al tenis?\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#3ed35050 .cell execution_count=3}\n    ``` {.julia .cell-code}\n    using GLMakie, AlgebraOfGraphics\n    \n    function frecuencias(df::DataFrame, var::Symbol)\n        # Calculamos el número de días de cada clase que se juega al tenis.\n        frec = combine(groupby(df, [var, :Tenis]), nrow => :Días)\n        # Dibujamos el diagrama de barras.\n        plt = data(frec) * \n        mapping(var, :Días, stack = :Tenis, color = :Tenis, ) * \n        visual(BarPlot) \n        # Devolvemos el gráfico.\n        return plt\n    end\n    \n    fig = Figure()\n    draw!(fig[1, 1], frecuencias(df, :Cielo))\n    draw!(fig[1, 2], frecuencias(df, :Temperatura))\n    draw!(fig[1, 3], frecuencias(df, :Humedad))\n    draw!(fig[1, 4], frecuencias(df, :Viento))\n    fig\n    ```\n    \n    ::: {.cell-output .cell-output-stderr}\n    ```\n    ┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n    └ @ Makie ~/.julia/packages/Makie/ux0Te/src/scenes.jl:238\n    ```\n    :::\n    \n    ::: {.cell-output .cell-output-display execution_count=150}\n    ![](07-arboles-decision_files/figure-html/cell-3-output-2.svg){}\n    :::\n    :::\n    \n    \n    A la vista de las frecuencias de cada variable, las variable `Cielo` y `Humedad` parecen ser las que más influye en la decisión de jugar al tenis.\n    :::\n\na.  Calcular la impureza del conjunto de datos utilizando el índice de Gini. ¿Qué variable meteorológica parece tener más influencia en la decisión de jugar al tenis?\n\n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    El [índice de Gini](https://en.wikipedia.org/wiki/Decision_tree_learning#Gini_impurity) se calcula mediante la fórmula\n    \n    $$ GI = 1 - \\sum_{i=1}^{n} p_i^2 $$\n\n    donde $p_i$ es la proporción de cada clase en el conjunto de datos y $n$ es el número de clases.\n    \n    El índice de Gini toma valores entre $0$ y $1-\\frac{1}{n}$ ($0.5$ en el caso de clasificación binaria), donde $0$ indica que todas las instancias pertenecen a una sola clase (mínima impureza) y $1-\\frac{1}{n}$ indica que las instancias están distribuidas uniformemente entre todas las clases (máxima impureza).\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#2dbf8722 .cell execution_count=4}\n    ``` {.julia .cell-code}\n    function gini(df::DataFrame, var::Symbol)\n        # Calculamos el número de ejemplos.\n        n = nrow(df)\n        # Calculamos las frecuencias absolutas de cada clase.\n        frec = combine(groupby(df, var), nrow => :ni)\n        # Calculamos la proporción de cada clase.\n        frec.p = frec.ni ./ n\n        # Calculamos el índice de Gini.\n        gini = 1 - sum(frec.p .^ 2)\n        return gini\n    end\n    \n    g0 = gini(df, :Tenis)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=151}\n    ```\n    0.4591836734693877\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  ¿Qué reducción del índice Gini se obtiene si dividimos el conjunto de ejemplos según la variable `Humedad`? ¿Y si dividimos el conjunto con respecto a la variable `Viento`?\n\n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    La reducción del índice de Gini se calcula como la diferencia entre el índice de Gini del conjunto original y el índice de Gini del conjunto dividido.\n    \n    $$ \\Delta GI = GI_{original} - GI_{dividido} $$\n\n    donde el índice de Gini del conjunto dividido es la media ponderada de los índices de Gini de los subconjuntos resultantes de la división.\n    :::\n    \n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    Calculamos primero la reducción del índice de Gini al dividir el conjunto de ejemplos según la variable `Humedad`.\n\n\n    ::: {#570a0e81 .cell execution_count=5}\n    ``` {.julia .cell-code}\n    using Tidier\n    # Dividimos el conjunto de ejemplos según la variable Humedad.\n    df_humedad_alta = @filter(df, Humedad == \"Alta\")\n    df_humedad_normal = @filter(df, Humedad == \"Normal\")\n    # Calculamos los tamaños de los subconjuntos de ejemplos.\n    n = nrow(df_humedad_alta), nrow(df_humedad_normal)\n    # Calculamos el índice de Gini de cada subconjunto.\n    gis = gini(df_humedad_alta, :Tenis), gini(df_humedad_normal, :Tenis)\n    # Calculamos media ponderada de los índices de Gini de los subconjuntos \n    g_humedad = sum(gis .* n) / sum(n)\n    # Calculamos la reducción del índice de Gini.\n    g0 - g_humedad\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=152}\n    ```\n    0.09183673469387743\n    ```\n    :::\n    :::\n    \n    \n    Calculamos ahora la reducción del índice de Gini al dividir el conjunto de ejemplos según la variable `Viento`.\n\n\n    ::: {#6868a2fe .cell execution_count=6}\n    ``` {.julia .cell-code}\n    # Dividimos el conjunto de ejemplos según la variable `Viento`\n    df_viento_fuerte = @filter(df, Viento == \"Fuerte\")\n    df_viento_suave = @filter(df, Viento == \"Suave\")\n    # Calculamos los tamaños de los subconjuntos de ejemplos\n    n = nrow(df_viento_fuerte), nrow(df_viento_suave)\n    # Calculamos el índice de Gini de cada subconjunto\n    gis = gini(df_viento_fuerte, :Tenis), gini(df_viento_suave, :Tenis)\n    # Calculamos media ponderada de los índices de Gini de los subconjuntos\n    g_viento = sum(gis .* n) / sum(n)\n    # Calculamos la reducción del índice de Gini\n    g0 - g_viento\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=153}\n    ```\n    0.030612244897959162\n    ```\n    :::\n    :::\n    \n    \n    Como se puede observar, la reducción del índice de Gini al dividir el conjunto de ejemplos según la variable `Humedad` es mayor que la reducción del índice de Gini al dividir el conjunto con respecto a la variable `Viento`. Por lo tanto, la variable `Humedad` parece tener más influencia en la decisión de jugar al tenis y sería la variable que se debería elegir para dividir el conjunto de ejemplos.\n    :::\n\na.  Construir un árbol de decisión que explique si se puede jugar al tenis en función de las variables meteorológicas.\n    \n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    Usar la función `DecisionTreeClassifier` del paquete [`DecisionTree.jl`](https://docs.juliahub.com/DecisionTree/). \n\n    Los parámetros más importantes de esta función son:\n\n    - `max_depth`: Profundidad máxima del árbol. Si no se indica, el árbol crecerá hasta que todas las hojas sean puras o hasta que todas las hojas contengan menos de `min_samples_split` ejemplos.\n    - `min_samples_leaf`: Número mínimo de ejemplos en una hoja (1 por defecto).\n    - `min_samples_split`: Número mínimo de ejemplos para dividir un nodo (2 por defecto).\n    - `min_impurity_decrease`: Reducción mínima de la impureza para dividir un nodo (0 por defecto).\n    - `post-prune`: Si se indica `true`, se poda el árbol después de que se ha construido. La poda reduce el tamaño del árbol eliminando nodos que no aportan información útil.\n    - `merge_purity_threshold`: Umbral de pureza para fusionar nodos. Si se indica, se fusionan los nodos que tienen una pureza menor que este umbral.\n    - `feature_importance`: Indica la medida para calcular la importancia de las variables a la hora de dividir el conjunto de datos. Puede ser `:impurity` o `:split`. Si no se indica, se utiliza la impureza de Gini.\n    - `rng`: Indica la semilla para la generación de números aleatorios. Si no se indica, se utiliza el generador de números aleatorios por defecto.\n    :::\n    \n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#7a816fb7 .cell execution_count=7}\n    ``` {.julia .cell-code}\n    using DecisionTree, CategoricalArrays\n    # Variables predictoras.\n    X = Matrix(select(df, Not(:Tenis)))\n    # Variable objetivo.\n    y = df.Tenis\n    # Convertir las variables categóricas a enteros.\n    X = hcat([levelcode.(categorical(X[:, j])) for j in 1:size(X, 2)]...)\n    # Convertir la variable objetivo a enteros.\n    y = levelcode.(categorical(y))\n    tree = DecisionTreeClassifier(max_depth=3)\n    fit!(tree, X, y)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=154}\n    ```\n    DecisionTreeClassifier\n    max_depth:                3\n    min_samples_leaf:         1\n    min_samples_split:        2\n    min_purity_increase:      0.0\n    pruning_purity_threshold: 1.0\n    n_subfeatures:            0\n    classes:                  [1, 2]\n    root:                     Decision Tree\n    Leaves: 6\n    Depth:  3\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Visualizar el árbol de decisión construido.\n\n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    Usar la función `plot_tree` del paquete [`DecisionTree.jl`](https://docs.juliahub.com/DecisionTree/).\n    :::\n    \n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#e758d25b .cell execution_count=8}\n    ``` {.julia .cell-code}\n    print_tree(tree, feature_names=names(df)[1:end-1])\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    Feature 3: \"Humedad\" < 2.0 ?\n    ├─ Feature 1: \"Cielo\" < 3.0 ?\n        ├─ Feature 4: \"Viento\" < 2.0 ?\n            ├─ 2 : 1/2\n            └─ 2 : 2/2\n        └─ 1 : 3/3\n    └─ Feature 4: \"Viento\" < 2.0 ?\n        ├─ Feature 1: \"Cielo\" < 2.0 ?\n            ├─ 1 : 1/1\n            └─ 2 : 2/2\n        └─ 2 : 4/4\n    ```\n    :::\n    :::\n    \n    \n    :::\n:::\n\n:::{#exr-arboles-decision-2}\nEl conjunto de datos [pingüinos.csv]() contiene un conjunto de datos sobre tres eEspecie de pingüinos con las siguientes variables:\n\n- Especie: Especie de pingüino, comúnmente Adelie, Chinstrap o Gentoo.\n- Isla: Isla del archipiélago Palmer donde se realizó la observación.\n- Longitud_pico: Longitud del pico en mm.\n- Profundidad_pico: Profundidad del pico en mm\n- Longitud_ala: Longitud de la aleta en mm.\n- Peso: Masa corporal en gramos.\n- Sexo: Sexo\n\na.  Cargar los datos del archivo `pinguïnos.csv` en un data frame.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#0985219c .cell execution_count=9}\n    ``` {.julia .cell-code}\n    using CSV, DataFrames\n    df = CSV.read(\"datos/pingüinos.csv\", DataFrame, missingstring=\"NA\")\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=156}\n    ```{=html}\n    <div><div style = \"float: left;\"><span>344×7 DataFrame</span></div><div style = \"float: right;\"><span style = \"font-style: italic;\">319 rows omitted</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">Especie</th><th style = \"text-align: left;\">Isla</th><th style = \"text-align: left;\">Longitud_pico</th><th style = \"text-align: left;\">Profundidad_pico</th><th style = \"text-align: left;\">Longitud_ala</th><th style = \"text-align: left;\">Peso</th><th style = \"text-align: left;\">Sexo</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"Union{Missing, Float64}\" style = \"text-align: left;\">Float64?</th><th title = \"Union{Missing, Float64}\" style = \"text-align: left;\">Float64?</th><th title = \"Union{Missing, Int64}\" style = \"text-align: left;\">Int64?</th><th title = \"Union{Missing, Int64}\" style = \"text-align: left;\">Int64?</th><th title = \"Union{Missing, String7}\" style = \"text-align: left;\">String7?</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">39.1</td><td style = \"text-align: right;\">18.7</td><td style = \"text-align: right;\">181</td><td style = \"text-align: right;\">3750</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">39.5</td><td style = \"text-align: right;\">17.4</td><td style = \"text-align: right;\">186</td><td style = \"text-align: right;\">3800</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">40.3</td><td style = \"text-align: right;\">18.0</td><td style = \"text-align: right;\">195</td><td style = \"text-align: right;\">3250</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"font-style: italic; text-align: left;\">missing</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">36.7</td><td style = \"text-align: right;\">19.3</td><td style = \"text-align: right;\">193</td><td style = \"text-align: right;\">3450</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">39.3</td><td style = \"text-align: right;\">20.6</td><td style = \"text-align: right;\">190</td><td style = \"text-align: right;\">3650</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">38.9</td><td style = \"text-align: right;\">17.8</td><td style = \"text-align: right;\">181</td><td style = \"text-align: right;\">3625</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">39.2</td><td style = \"text-align: right;\">19.6</td><td style = \"text-align: right;\">195</td><td style = \"text-align: right;\">4675</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">34.1</td><td style = \"text-align: right;\">18.1</td><td style = \"text-align: right;\">193</td><td style = \"text-align: right;\">3475</td><td style = \"font-style: italic; text-align: left;\">missing</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">42.0</td><td style = \"text-align: right;\">20.2</td><td style = \"text-align: right;\">190</td><td style = \"text-align: right;\">4250</td><td style = \"font-style: italic; text-align: left;\">missing</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">37.8</td><td style = \"text-align: right;\">17.1</td><td style = \"text-align: right;\">186</td><td style = \"text-align: right;\">3300</td><td style = \"font-style: italic; text-align: left;\">missing</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">37.8</td><td style = \"text-align: right;\">17.3</td><td style = \"text-align: right;\">180</td><td style = \"text-align: right;\">3700</td><td style = \"font-style: italic; text-align: left;\">missing</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">41.1</td><td style = \"text-align: right;\">17.6</td><td style = \"text-align: right;\">182</td><td style = \"text-align: right;\">3200</td><td style = \"text-align: left;\">hembra</td></tr><tr><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">333</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">45.2</td><td style = \"text-align: right;\">16.6</td><td style = \"text-align: right;\">191</td><td style = \"text-align: right;\">3250</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">334</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">49.3</td><td style = \"text-align: right;\">19.9</td><td style = \"text-align: right;\">203</td><td style = \"text-align: right;\">4050</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">335</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">50.2</td><td style = \"text-align: right;\">18.8</td><td style = \"text-align: right;\">202</td><td style = \"text-align: right;\">3800</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">336</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">45.6</td><td style = \"text-align: right;\">19.4</td><td style = \"text-align: right;\">194</td><td style = \"text-align: right;\">3525</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">337</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">51.9</td><td style = \"text-align: right;\">19.5</td><td style = \"text-align: right;\">206</td><td style = \"text-align: right;\">3950</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">338</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">46.8</td><td style = \"text-align: right;\">16.5</td><td style = \"text-align: right;\">189</td><td style = \"text-align: right;\">3650</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">339</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">45.7</td><td style = \"text-align: right;\">17.0</td><td style = \"text-align: right;\">195</td><td style = \"text-align: right;\">3650</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">340</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">55.8</td><td style = \"text-align: right;\">19.8</td><td style = \"text-align: right;\">207</td><td style = \"text-align: right;\">4000</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">341</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">43.5</td><td style = \"text-align: right;\">18.1</td><td style = \"text-align: right;\">202</td><td style = \"text-align: right;\">3400</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">342</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">49.6</td><td style = \"text-align: right;\">18.2</td><td style = \"text-align: right;\">193</td><td style = \"text-align: right;\">3775</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">343</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">50.8</td><td style = \"text-align: right;\">19.0</td><td style = \"text-align: right;\">210</td><td style = \"text-align: right;\">4100</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">344</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">50.2</td><td style = \"text-align: right;\">18.7</td><td style = \"text-align: right;\">198</td><td style = \"text-align: right;\">3775</td><td style = \"text-align: left;\">hembra</td></tr></tbody></table></div>\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Hacer un análisis de los datos perdidos en el data frame. \n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#3372b70b .cell execution_count=10}\n    ``` {.julia .cell-code}\n    describe(df, :nmissing)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=157}\n    ```{=html}\n    <div><div style = \"float: left;\"><span>7×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">variable</th><th style = \"text-align: left;\">nmissing</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Symbol\" style = \"text-align: left;\">Symbol</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Especie</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Isla</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Longitud_pico</td><td style = \"text-align: right;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Profundidad_pico</td><td style = \"text-align: right;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Longitud_ala</td><td style = \"text-align: right;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Peso</td><td style = \"text-align: right;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Sexo</td><td style = \"text-align: right;\">11</td></tr></tbody></table></div>\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Eliminar del data frame los casos con valores perdidos.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#c57f7158 .cell execution_count=11}\n    ``` {.julia .cell-code}\n    dropmissing!(df)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=158}\n    ```{=html}\n    <div><div style = \"float: left;\"><span>333×7 DataFrame</span></div><div style = \"float: right;\"><span style = \"font-style: italic;\">308 rows omitted</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">Especie</th><th style = \"text-align: left;\">Isla</th><th style = \"text-align: left;\">Longitud_pico</th><th style = \"text-align: left;\">Profundidad_pico</th><th style = \"text-align: left;\">Longitud_ala</th><th style = \"text-align: left;\">Peso</th><th style = \"text-align: left;\">Sexo</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"String7\" style = \"text-align: left;\">String7</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">39.1</td><td style = \"text-align: right;\">18.7</td><td style = \"text-align: right;\">181</td><td style = \"text-align: right;\">3750</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">39.5</td><td style = \"text-align: right;\">17.4</td><td style = \"text-align: right;\">186</td><td style = \"text-align: right;\">3800</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">40.3</td><td style = \"text-align: right;\">18.0</td><td style = \"text-align: right;\">195</td><td style = \"text-align: right;\">3250</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">36.7</td><td style = \"text-align: right;\">19.3</td><td style = \"text-align: right;\">193</td><td style = \"text-align: right;\">3450</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">39.3</td><td style = \"text-align: right;\">20.6</td><td style = \"text-align: right;\">190</td><td style = \"text-align: right;\">3650</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">38.9</td><td style = \"text-align: right;\">17.8</td><td style = \"text-align: right;\">181</td><td style = \"text-align: right;\">3625</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">39.2</td><td style = \"text-align: right;\">19.6</td><td style = \"text-align: right;\">195</td><td style = \"text-align: right;\">4675</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">41.1</td><td style = \"text-align: right;\">17.6</td><td style = \"text-align: right;\">182</td><td style = \"text-align: right;\">3200</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">38.6</td><td style = \"text-align: right;\">21.2</td><td style = \"text-align: right;\">191</td><td style = \"text-align: right;\">3800</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">34.6</td><td style = \"text-align: right;\">21.1</td><td style = \"text-align: right;\">198</td><td style = \"text-align: right;\">4400</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">36.6</td><td style = \"text-align: right;\">17.8</td><td style = \"text-align: right;\">185</td><td style = \"text-align: right;\">3700</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">38.7</td><td style = \"text-align: right;\">19.0</td><td style = \"text-align: right;\">195</td><td style = \"text-align: right;\">3450</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">42.5</td><td style = \"text-align: right;\">20.7</td><td style = \"text-align: right;\">197</td><td style = \"text-align: right;\">4500</td><td style = \"text-align: left;\">macho</td></tr><tr><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">322</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">45.2</td><td style = \"text-align: right;\">16.6</td><td style = \"text-align: right;\">191</td><td style = \"text-align: right;\">3250</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">323</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">49.3</td><td style = \"text-align: right;\">19.9</td><td style = \"text-align: right;\">203</td><td style = \"text-align: right;\">4050</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">324</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">50.2</td><td style = \"text-align: right;\">18.8</td><td style = \"text-align: right;\">202</td><td style = \"text-align: right;\">3800</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">325</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">45.6</td><td style = \"text-align: right;\">19.4</td><td style = \"text-align: right;\">194</td><td style = \"text-align: right;\">3525</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">326</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">51.9</td><td style = \"text-align: right;\">19.5</td><td style = \"text-align: right;\">206</td><td style = \"text-align: right;\">3950</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">327</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">46.8</td><td style = \"text-align: right;\">16.5</td><td style = \"text-align: right;\">189</td><td style = \"text-align: right;\">3650</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">328</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">45.7</td><td style = \"text-align: right;\">17.0</td><td style = \"text-align: right;\">195</td><td style = \"text-align: right;\">3650</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">329</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">55.8</td><td style = \"text-align: right;\">19.8</td><td style = \"text-align: right;\">207</td><td style = \"text-align: right;\">4000</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">330</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">43.5</td><td style = \"text-align: right;\">18.1</td><td style = \"text-align: right;\">202</td><td style = \"text-align: right;\">3400</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">331</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">49.6</td><td style = \"text-align: right;\">18.2</td><td style = \"text-align: right;\">193</td><td style = \"text-align: right;\">3775</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">332</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">50.8</td><td style = \"text-align: right;\">19.0</td><td style = \"text-align: right;\">210</td><td style = \"text-align: right;\">4100</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">333</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">50.2</td><td style = \"text-align: right;\">18.7</td><td style = \"text-align: right;\">198</td><td style = \"text-align: right;\">3775</td><td style = \"text-align: left;\">hembra</td></tr></tbody></table></div>\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Crear diagramas que muestren la distribución de frecuencias de cada variable según la especie de pingüino. ¿Qué variable parece tener más influencia en la especie de pingüino?\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    Para las variables cualitativas dibujamos diagramas de barras.\n\n\n    ::: {#ad2073ff .cell execution_count=12}\n    ``` {.julia .cell-code}\n    using GLMakie, AlgebraOfGraphics\n    \n    frec_isla = combine(groupby(df, [:Isla, :Especie]), nrow => :Frecuencia)\n    data(frec_isla) * \n        mapping(:Isla, :Frecuencia, stack = :Especie, color =:Especie) *\n        visual(BarPlot) |> draw\n    ```\n    \n    ::: {.cell-output .cell-output-stderr}\n    ```\n    ┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n    └ @ Makie ~/.julia/packages/Makie/ux0Te/src/scenes.jl:238\n    ```\n    :::\n    \n    ::: {.cell-output .cell-output-display execution_count=159}\n    ![](07-arboles-decision_files/figure-html/cell-12-output-2.svg){}\n    :::\n    :::\n    \n    \n\n    ::: {#46ab91eb .cell execution_count=13}\n    ``` {.julia .cell-code}\n    frec_sexo = combine(groupby(df, [:Sexo, :Especie]), nrow => :Frecuencia)\n    data(frec_sexo) * \n        mapping(:Sexo, :Frecuencia, stack = :Especie, color =:Especie) *\n        visual(BarPlot) |> draw\n    ```\n    \n    ::: {.cell-output .cell-output-stderr}\n    ```\n    ┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n    └ @ Makie ~/.julia/packages/Makie/ux0Te/src/scenes.jl:238\n    ```\n    :::\n    \n    ::: {.cell-output .cell-output-display execution_count=160}\n    ![](07-arboles-decision_files/figure-html/cell-13-output-2.svg){}\n    :::\n    :::\n    \n    \n    Para las variables cuantitativas dibujamos diagramas de cajas.\n\n\n    ::: {#5a30d948 .cell execution_count=14}\n    ``` {.julia .cell-code}\n    function cajas(df, var, clase)\n        data(df) *\n            mapping(clase, var, color = clase) *\n            visual(BoxPlot) |> \n            draw\n    end\n    \n    cajas(df, :Longitud_pico, :Especie)\n    ```\n    \n    ::: {.cell-output .cell-output-stderr}\n    ```\n    ┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n    └ @ Makie ~/.julia/packages/Makie/ux0Te/src/scenes.jl:238\n    ```\n    :::\n    \n    ::: {.cell-output .cell-output-display execution_count=161}\n    ![](07-arboles-decision_files/figure-html/cell-14-output-2.svg){}\n    :::\n    :::\n    \n    \n\n    ::: {#8d098ae7 .cell execution_count=15}\n    ``` {.julia .cell-code}\n    cajas(df, :Profundidad_pico, :Especie)\n    ```\n    \n    ::: {.cell-output .cell-output-stderr}\n    ```\n    ┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n    └ @ Makie ~/.julia/packages/Makie/ux0Te/src/scenes.jl:238\n    ```\n    :::\n    \n    ::: {.cell-output .cell-output-display execution_count=162}\n    ![](07-arboles-decision_files/figure-html/cell-15-output-2.svg){}\n    :::\n    :::\n    \n    \n\n    ::: {#eeb0a090 .cell execution_count=16}\n    ``` {.julia .cell-code}\n    cajas(df, :Longitud_ala, :Especie)\n    ```\n    \n    ::: {.cell-output .cell-output-stderr}\n    ```\n    ┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n    └ @ Makie ~/.julia/packages/Makie/ux0Te/src/scenes.jl:238\n    ```\n    :::\n    \n    ::: {.cell-output .cell-output-display execution_count=163}\n    ![](07-arboles-decision_files/figure-html/cell-16-output-2.svg){}\n    :::\n    :::\n    \n    \n\n    ::: {#f7c9aa4c .cell execution_count=17}\n    ``` {.julia .cell-code}\n    cajas(df, :Peso, :Especie)\n    ```\n    \n    ::: {.cell-output .cell-output-stderr}\n    ```\n    ┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n    └ @ Makie ~/.julia/packages/Makie/ux0Te/src/scenes.jl:238\n    ```\n    :::\n    \n    ::: {.cell-output .cell-output-display execution_count=164}\n    ![](07-arboles-decision_files/figure-html/cell-17-output-2.svg){}\n    :::\n    :::\n    \n    \n    :::\n\na.  ¿Cuál es la reducción de la impureza del conjunto de datos si dividimos el conjunto de datos en dos conjuntos según si la longitud del pico es mayor o menor que 44 mm?\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#dceada9b .cell execution_count=18}\n    ``` {.julia .cell-code}\n    using Tidier\n    function gini(df::DataFrame, var::Symbol)\n        n = nrow(df)\n        frec = combine(groupby(df, var), nrow => :ni)\n        frec.p = frec.ni ./ n\n        gini = 1 - sum(frec.p .^ 2)\n        return gini\n    end\n    \n    function reduccion_impureza(df::DataFrame, var::Symbol, val::Number)\n        # Dividimos el conjunto de ejemplos según la longitud del pico es menor de 44.\n        df_menor = @eval @filter($df, $var <= $val)\n        df_mayor = @eval @filter($df, $var > $val)\n        # Calculamos los tamaños de los subconjuntos de ejemplos.\n        n = nrow(df_menor), nrow(df_mayor)\n        # Calculamos el índice de Gini de cada subconjunto.\n        gis = gini(df_menor, :Especie), gini(df_mayor, :Especie)\n        # Calculamos media ponderada de los índices de Gini de los subconjuntos.\n        g1 = sum(gis .* n) / sum(n)\n        # Calculamos la reducción del índice de Gini.\n        gini(df, :Especie) - g1\n    end\n    \n    reduccion_impureza(df, :Longitud_pico, 44)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=165}\n    ```\n    0.26577182779353914\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Determinar el valor óptimo de división del conjunto de datos según la longitud del pico. Para ello, calcular la reducción de la impureza para cada valor de longitud del pico y dibujar el resultado.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    Dibujamos la reducción de la impureza en función de la longitud del pico.\n\n\n    ::: {#6e01e69f .cell execution_count=19}\n    ``` {.julia .cell-code}\n    using Plots\n    # Valores únicos de longitud del pico.\n    valores = unique(df.Longitud_pico)\n    # Reducción de la impureza para cada valor.\n    reducciones = [reduccion_impureza(df, :Longitud_pico, val) for val in valores]\n    # Graficamos el resultado.\n    Plots.scatter(valores, reducciones, xlabel = \"Longitud del pico\", ylabel = \"Reducción de la impureza\", legend = false)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=166}\n    ```{=html}\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"672\" height=\"480\" viewBox=\"0 0 2688 1920\">\n    <defs>\n      <clipPath id=\"clip280\">\n        <rect x=\"0\" y=\"0\" width=\"2688\" height=\"1920\"/>\n      </clipPath>\n    </defs>\n    <path clip-path=\"url(#clip280)\" d=\"M0 1920 L2688 1920 L2688 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n    <defs>\n      <clipPath id=\"clip281\">\n        <rect x=\"537\" y=\"0\" width=\"1883\" height=\"1883\"/>\n      </clipPath>\n    </defs>\n    <path clip-path=\"url(#clip280)\" d=\"M225.654 1734.12 L2640.76 1734.12 L2640.76 47.2441 L225.654 47.2441  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n    <defs>\n      <clipPath id=\"clip282\">\n        <rect x=\"225\" y=\"47\" width=\"2416\" height=\"1688\"/>\n      </clipPath>\n    </defs>\n    <polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"534.274,1734.12 534.274,47.2441 \"/>\n    <polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"948.528,1734.12 948.528,47.2441 \"/>\n    <polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1362.78,1734.12 1362.78,47.2441 \"/>\n    <polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1777.04,1734.12 1777.04,47.2441 \"/>\n    <polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2191.29,1734.12 2191.29,47.2441 \"/>\n    <polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2605.54,1734.12 2605.54,47.2441 \"/>\n    <polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"225.654,1686.38 2640.76,1686.38 \"/>\n    <polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"225.654,1169.51 2640.76,1169.51 \"/>\n    <polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"225.654,652.654 2640.76,652.654 \"/>\n    <polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"225.654,135.793 2640.76,135.793 \"/>\n    <polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"225.654,1734.12 2640.76,1734.12 \"/>\n    <polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"534.274,1734.12 534.274,1715.22 \"/>\n    <polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"948.528,1734.12 948.528,1715.22 \"/>\n    <polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1362.78,1734.12 1362.78,1715.22 \"/>\n    <polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1777.04,1734.12 1777.04,1715.22 \"/>\n    <polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2191.29,1734.12 2191.29,1715.22 \"/>\n    <polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2605.54,1734.12 2605.54,1715.22 \"/>\n    <path clip-path=\"url(#clip280)\" d=\"M523.614 1780.19 Q526.971 1780.9 528.846 1783.17 Q530.744 1785.44 530.744 1788.77 Q530.744 1793.89 527.225 1796.69 Q523.707 1799.49 517.225 1799.49 Q515.049 1799.49 512.735 1799.05 Q510.443 1798.64 507.989 1797.78 L507.989 1793.27 Q509.934 1794.4 512.248 1794.98 Q514.563 1795.56 517.086 1795.56 Q521.484 1795.56 523.776 1793.82 Q526.091 1792.08 526.091 1788.77 Q526.091 1785.72 523.938 1784.01 Q521.809 1782.27 517.989 1782.27 L513.961 1782.27 L513.961 1778.43 L518.174 1778.43 Q521.623 1778.43 523.452 1777.06 Q525.281 1775.67 525.281 1773.08 Q525.281 1770.42 523.383 1769.01 Q521.508 1767.57 517.989 1767.57 Q516.068 1767.57 513.869 1767.99 Q511.67 1768.4 509.031 1769.28 L509.031 1765.12 Q511.693 1764.38 514.008 1764.01 Q516.346 1763.64 518.406 1763.64 Q523.73 1763.64 526.832 1766.07 Q529.934 1768.47 529.934 1772.59 Q529.934 1775.46 528.29 1777.46 Q526.646 1779.42 523.614 1780.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M539.656 1764.26 L558.012 1764.26 L558.012 1768.2 L543.938 1768.2 L543.938 1776.67 Q544.957 1776.32 545.975 1776.16 Q546.994 1775.97 548.012 1775.97 Q553.799 1775.97 557.179 1779.15 Q560.558 1782.32 560.558 1787.73 Q560.558 1793.31 557.086 1796.41 Q553.614 1799.49 547.295 1799.49 Q545.119 1799.49 542.85 1799.12 Q540.605 1798.75 538.197 1798.01 L538.197 1793.31 Q540.281 1794.45 542.503 1795 Q544.725 1795.56 547.202 1795.56 Q551.207 1795.56 553.544 1793.45 Q555.882 1791.34 555.882 1787.73 Q555.882 1784.12 553.544 1782.02 Q551.207 1779.91 547.202 1779.91 Q545.327 1779.91 543.452 1780.33 Q541.6 1780.74 539.656 1781.62 L539.656 1764.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M936.699 1768.34 L924.894 1786.78 L936.699 1786.78 L936.699 1768.34 M935.472 1764.26 L941.352 1764.26 L941.352 1786.78 L946.283 1786.78 L946.283 1790.67 L941.352 1790.67 L941.352 1798.82 L936.699 1798.82 L936.699 1790.67 L921.097 1790.67 L921.097 1786.16 L935.472 1764.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M964.014 1767.34 Q960.403 1767.34 958.574 1770.9 Q956.769 1774.45 956.769 1781.58 Q956.769 1788.68 958.574 1792.25 Q960.403 1795.79 964.014 1795.79 Q967.648 1795.79 969.454 1792.25 Q971.282 1788.68 971.282 1781.58 Q971.282 1774.45 969.454 1770.9 Q967.648 1767.34 964.014 1767.34 M964.014 1763.64 Q969.824 1763.64 972.88 1768.24 Q975.958 1772.83 975.958 1781.58 Q975.958 1790.3 972.88 1794.91 Q969.824 1799.49 964.014 1799.49 Q958.204 1799.49 955.125 1794.91 Q952.07 1790.3 952.07 1781.58 Q952.07 1772.83 955.125 1768.24 Q958.204 1763.64 964.014 1763.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1351.45 1768.34 L1339.65 1786.78 L1351.45 1786.78 L1351.45 1768.34 M1350.22 1764.26 L1356.1 1764.26 L1356.1 1786.78 L1361.03 1786.78 L1361.03 1790.67 L1356.1 1790.67 L1356.1 1798.82 L1351.45 1798.82 L1351.45 1790.67 L1335.85 1790.67 L1335.85 1786.16 L1350.22 1764.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1368.81 1764.26 L1387.17 1764.26 L1387.17 1768.2 L1373.09 1768.2 L1373.09 1776.67 Q1374.11 1776.32 1375.13 1776.16 Q1376.15 1775.97 1377.17 1775.97 Q1382.96 1775.97 1386.34 1779.15 Q1389.71 1782.32 1389.71 1787.73 Q1389.71 1793.31 1386.24 1796.41 Q1382.77 1799.49 1376.45 1799.49 Q1374.27 1799.49 1372.01 1799.12 Q1369.76 1798.75 1367.35 1798.01 L1367.35 1793.31 Q1369.44 1794.45 1371.66 1795 Q1373.88 1795.56 1376.36 1795.56 Q1380.36 1795.56 1382.7 1793.45 Q1385.04 1791.34 1385.04 1787.73 Q1385.04 1784.12 1382.7 1782.02 Q1380.36 1779.91 1376.36 1779.91 Q1374.48 1779.91 1372.61 1780.33 Q1370.76 1780.74 1368.81 1781.62 L1368.81 1764.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1751.74 1764.26 L1770.09 1764.26 L1770.09 1768.2 L1756.02 1768.2 L1756.02 1776.67 Q1757.04 1776.32 1758.05 1776.16 Q1759.07 1775.97 1760.09 1775.97 Q1765.88 1775.97 1769.26 1779.15 Q1772.64 1782.32 1772.64 1787.73 Q1772.64 1793.31 1769.17 1796.41 Q1765.69 1799.49 1759.37 1799.49 Q1757.2 1799.49 1754.93 1799.12 Q1752.68 1798.75 1750.28 1798.01 L1750.28 1793.31 Q1752.36 1794.45 1754.58 1795 Q1756.8 1795.56 1759.28 1795.56 Q1763.29 1795.56 1765.62 1793.45 Q1767.96 1791.34 1767.96 1787.73 Q1767.96 1784.12 1765.62 1782.02 Q1763.29 1779.91 1759.28 1779.91 Q1757.41 1779.91 1755.53 1780.33 Q1753.68 1780.74 1751.74 1781.62 L1751.74 1764.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1791.85 1767.34 Q1788.24 1767.34 1786.41 1770.9 Q1784.61 1774.45 1784.61 1781.58 Q1784.61 1788.68 1786.41 1792.25 Q1788.24 1795.79 1791.85 1795.79 Q1795.49 1795.79 1797.29 1792.25 Q1799.12 1788.68 1799.12 1781.58 Q1799.12 1774.45 1797.29 1770.9 Q1795.49 1767.34 1791.85 1767.34 M1791.85 1763.64 Q1797.66 1763.64 1800.72 1768.24 Q1803.8 1772.83 1803.8 1781.58 Q1803.8 1790.3 1800.72 1794.91 Q1797.66 1799.49 1791.85 1799.49 Q1786.04 1799.49 1782.96 1794.91 Q1779.91 1790.3 1779.91 1781.58 Q1779.91 1772.83 1782.96 1768.24 Q1786.04 1763.64 1791.85 1763.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2166.49 1764.26 L2184.84 1764.26 L2184.84 1768.2 L2170.77 1768.2 L2170.77 1776.67 Q2171.79 1776.32 2172.81 1776.16 Q2173.83 1775.97 2174.84 1775.97 Q2180.63 1775.97 2184.01 1779.15 Q2187.39 1782.32 2187.39 1787.73 Q2187.39 1793.31 2183.92 1796.41 Q2180.45 1799.49 2174.13 1799.49 Q2171.95 1799.49 2169.68 1799.12 Q2167.44 1798.75 2165.03 1798.01 L2165.03 1793.31 Q2167.11 1794.45 2169.33 1795 Q2171.56 1795.56 2174.03 1795.56 Q2178.04 1795.56 2180.38 1793.45 Q2182.71 1791.34 2182.71 1787.73 Q2182.71 1784.12 2180.38 1782.02 Q2178.04 1779.91 2174.03 1779.91 Q2172.16 1779.91 2170.28 1780.33 Q2168.43 1780.74 2166.49 1781.62 L2166.49 1764.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2196.65 1764.26 L2215.01 1764.26 L2215.01 1768.2 L2200.93 1768.2 L2200.93 1776.67 Q2201.95 1776.32 2202.97 1776.16 Q2203.99 1775.97 2205.01 1775.97 Q2210.79 1775.97 2214.17 1779.15 Q2217.55 1782.32 2217.55 1787.73 Q2217.55 1793.31 2214.08 1796.41 Q2210.61 1799.49 2204.29 1799.49 Q2202.11 1799.49 2199.84 1799.12 Q2197.6 1798.75 2195.19 1798.01 L2195.19 1793.31 Q2197.27 1794.45 2199.5 1795 Q2201.72 1795.56 2204.2 1795.56 Q2208.2 1795.56 2210.54 1793.45 Q2212.88 1791.34 2212.88 1787.73 Q2212.88 1784.12 2210.54 1782.02 Q2208.2 1779.91 2204.2 1779.91 Q2202.32 1779.91 2200.45 1780.33 Q2198.59 1780.74 2196.65 1781.62 L2196.65 1764.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2590.95 1779.68 Q2587.8 1779.68 2585.95 1781.83 Q2584.12 1783.98 2584.12 1787.73 Q2584.12 1791.46 2585.95 1793.64 Q2587.8 1795.79 2590.95 1795.79 Q2594.1 1795.79 2595.93 1793.64 Q2597.78 1791.46 2597.78 1787.73 Q2597.78 1783.98 2595.93 1781.83 Q2594.1 1779.68 2590.95 1779.68 M2600.23 1765.02 L2600.23 1769.28 Q2598.47 1768.45 2596.67 1768.01 Q2594.88 1767.57 2593.13 1767.57 Q2588.5 1767.57 2586.04 1770.7 Q2583.61 1773.82 2583.26 1780.14 Q2584.63 1778.13 2586.69 1777.06 Q2588.75 1775.97 2591.23 1775.97 Q2596.44 1775.97 2599.44 1779.15 Q2602.48 1782.29 2602.48 1787.73 Q2602.48 1793.06 2599.33 1796.27 Q2596.18 1799.49 2590.95 1799.49 Q2584.95 1799.49 2581.78 1794.91 Q2578.61 1790.3 2578.61 1781.58 Q2578.61 1773.38 2582.5 1768.52 Q2586.39 1763.64 2592.94 1763.64 Q2594.7 1763.64 2596.48 1763.98 Q2598.29 1764.33 2600.23 1765.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2620.53 1767.34 Q2616.92 1767.34 2615.09 1770.9 Q2613.29 1774.45 2613.29 1781.58 Q2613.29 1788.68 2615.09 1792.25 Q2616.92 1795.79 2620.53 1795.79 Q2624.17 1795.79 2625.97 1792.25 Q2627.8 1788.68 2627.8 1781.58 Q2627.8 1774.45 2625.97 1770.9 Q2624.17 1767.34 2620.53 1767.34 M2620.53 1763.64 Q2626.34 1763.64 2629.4 1768.24 Q2632.48 1772.83 2632.48 1781.58 Q2632.48 1790.3 2629.4 1794.91 Q2626.34 1799.49 2620.53 1799.49 Q2614.72 1799.49 2611.64 1794.91 Q2608.59 1790.3 2608.59 1781.58 Q2608.59 1772.83 2611.64 1768.24 Q2614.72 1763.64 2620.53 1763.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1158.02 1835.78 L1164.45 1835.78 L1164.45 1877.89 L1187.58 1877.89 L1187.58 1883.3 L1158.02 1883.3 L1158.02 1835.78 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1206.75 1851.76 Q1202.03 1851.76 1199.3 1855.45 Q1196.56 1859.11 1196.56 1865.51 Q1196.56 1871.91 1199.27 1875.6 Q1202 1879.26 1206.75 1879.26 Q1211.42 1879.26 1214.16 1875.57 Q1216.9 1871.87 1216.9 1865.51 Q1216.9 1859.17 1214.16 1855.48 Q1211.42 1851.76 1206.75 1851.76 M1206.75 1846.79 Q1214.38 1846.79 1218.74 1851.76 Q1223.11 1856.72 1223.11 1865.51 Q1223.11 1874.26 1218.74 1879.26 Q1214.38 1884.22 1206.75 1884.22 Q1199.07 1884.22 1194.71 1879.26 Q1190.39 1874.26 1190.39 1865.51 Q1190.39 1856.72 1194.71 1851.76 Q1199.07 1846.79 1206.75 1846.79 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1262.45 1861.78 L1262.45 1883.3 L1256.59 1883.3 L1256.59 1861.98 Q1256.59 1856.92 1254.62 1854.4 Q1252.64 1851.89 1248.7 1851.89 Q1243.95 1851.89 1241.22 1854.91 Q1238.48 1857.93 1238.48 1863.15 L1238.48 1883.3 L1232.59 1883.3 L1232.59 1847.65 L1238.48 1847.65 L1238.48 1853.19 Q1240.58 1849.98 1243.41 1848.39 Q1246.28 1846.79 1250 1846.79 Q1256.14 1846.79 1259.29 1850.61 Q1262.45 1854.4 1262.45 1861.78 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1297.58 1865.06 Q1297.58 1858.7 1294.94 1855.2 Q1292.33 1851.7 1287.59 1851.7 Q1282.88 1851.7 1280.24 1855.2 Q1277.63 1858.7 1277.63 1865.06 Q1277.63 1871.4 1280.24 1874.9 Q1282.88 1878.4 1287.59 1878.4 Q1292.33 1878.4 1294.94 1874.9 Q1297.58 1871.4 1297.58 1865.06 M1303.44 1878.88 Q1303.44 1887.98 1299.4 1892.4 Q1295.36 1896.86 1287.02 1896.86 Q1283.93 1896.86 1281.19 1896.38 Q1278.45 1895.94 1275.88 1894.98 L1275.88 1889.28 Q1278.45 1890.69 1280.97 1891.35 Q1283.48 1892.02 1286.09 1892.02 Q1291.85 1892.02 1294.72 1889 Q1297.58 1886.01 1297.58 1879.93 L1297.58 1877.03 Q1295.77 1880.18 1292.94 1881.74 Q1290.1 1883.3 1286.16 1883.3 Q1279.6 1883.3 1275.59 1878.3 Q1271.58 1873.31 1271.58 1865.06 Q1271.58 1856.79 1275.59 1851.79 Q1279.6 1846.79 1286.16 1846.79 Q1290.1 1846.79 1292.94 1848.35 Q1295.77 1849.91 1297.58 1853.06 L1297.58 1847.65 L1303.44 1847.65 L1303.44 1878.88 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1315.5 1847.65 L1321.36 1847.65 L1321.36 1883.3 L1315.5 1883.3 L1315.5 1847.65 M1315.5 1833.78 L1321.36 1833.78 L1321.36 1841.19 L1315.5 1841.19 L1315.5 1833.78 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1339.41 1837.53 L1339.41 1847.65 L1351.47 1847.65 L1351.47 1852.2 L1339.41 1852.2 L1339.41 1871.56 Q1339.41 1875.92 1340.58 1877.16 Q1341.79 1878.4 1345.45 1878.4 L1351.47 1878.4 L1351.47 1883.3 L1345.45 1883.3 Q1338.67 1883.3 1336.1 1880.79 Q1333.52 1878.24 1333.52 1871.56 L1333.52 1852.2 L1329.22 1852.2 L1329.22 1847.65 L1333.52 1847.65 L1333.52 1837.53 L1339.41 1837.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1358.57 1869.23 L1358.57 1847.65 L1364.42 1847.65 L1364.42 1869.01 Q1364.42 1874.07 1366.4 1876.62 Q1368.37 1879.13 1372.32 1879.13 Q1377.06 1879.13 1379.8 1876.11 Q1382.57 1873.08 1382.57 1867.86 L1382.57 1847.65 L1388.42 1847.65 L1388.42 1883.3 L1382.57 1883.3 L1382.57 1877.83 Q1380.43 1881.07 1377.6 1882.66 Q1374.8 1884.22 1371.08 1884.22 Q1364.93 1884.22 1361.75 1880.4 Q1358.57 1876.59 1358.57 1869.23 M1373.3 1846.79 L1373.3 1846.79 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1423.94 1853.06 L1423.94 1833.78 L1429.8 1833.78 L1429.8 1883.3 L1423.94 1883.3 L1423.94 1877.95 Q1422.1 1881.14 1419.26 1882.7 Q1416.46 1884.22 1412.52 1884.22 Q1406.06 1884.22 1401.98 1879.07 Q1397.94 1873.91 1397.94 1865.51 Q1397.94 1857.11 1401.98 1851.95 Q1406.06 1846.79 1412.52 1846.79 Q1416.46 1846.79 1419.26 1848.35 Q1422.1 1849.88 1423.94 1853.06 M1403.99 1865.51 Q1403.99 1871.97 1406.63 1875.66 Q1409.3 1879.32 1413.95 1879.32 Q1418.6 1879.32 1421.27 1875.66 Q1423.94 1871.97 1423.94 1865.51 Q1423.94 1859.05 1421.27 1855.39 Q1418.6 1851.7 1413.95 1851.7 Q1409.3 1851.7 1406.63 1855.39 Q1403.99 1859.05 1403.99 1865.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1486.04 1853.06 L1486.04 1833.78 L1491.9 1833.78 L1491.9 1883.3 L1486.04 1883.3 L1486.04 1877.95 Q1484.19 1881.14 1481.36 1882.7 Q1478.56 1884.22 1474.61 1884.22 Q1468.15 1884.22 1464.08 1879.07 Q1460.04 1873.91 1460.04 1865.51 Q1460.04 1857.11 1464.08 1851.95 Q1468.15 1846.79 1474.61 1846.79 Q1478.56 1846.79 1481.36 1848.35 Q1484.19 1849.88 1486.04 1853.06 M1466.08 1865.51 Q1466.08 1871.97 1468.73 1875.66 Q1471.4 1879.32 1476.05 1879.32 Q1480.69 1879.32 1483.37 1875.66 Q1486.04 1871.97 1486.04 1865.51 Q1486.04 1859.05 1483.37 1855.39 Q1480.69 1851.7 1476.05 1851.7 Q1471.4 1851.7 1468.73 1855.39 Q1466.08 1859.05 1466.08 1865.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1534.45 1864.01 L1534.45 1866.88 L1507.52 1866.88 Q1507.91 1872.92 1511.15 1876.11 Q1514.43 1879.26 1520.26 1879.26 Q1523.63 1879.26 1526.78 1878.43 Q1529.96 1877.6 1533.08 1875.95 L1533.08 1881.49 Q1529.93 1882.82 1526.62 1883.52 Q1523.31 1884.22 1519.91 1884.22 Q1511.38 1884.22 1506.38 1879.26 Q1501.41 1874.29 1501.41 1865.83 Q1501.41 1857.07 1506.12 1851.95 Q1510.87 1846.79 1518.89 1846.79 Q1526.08 1846.79 1530.25 1851.44 Q1534.45 1856.06 1534.45 1864.01 M1528.6 1862.29 Q1528.53 1857.49 1525.89 1854.62 Q1523.28 1851.76 1518.95 1851.76 Q1514.05 1851.76 1511.09 1854.53 Q1508.16 1857.3 1507.72 1862.33 L1528.6 1862.29 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1544.06 1833.78 L1549.92 1833.78 L1549.92 1883.3 L1544.06 1883.3 L1544.06 1833.78 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1588.56 1877.95 L1588.56 1896.86 L1582.67 1896.86 L1582.67 1847.65 L1588.56 1847.65 L1588.56 1853.06 Q1590.41 1849.88 1593.21 1848.35 Q1596.04 1846.79 1599.95 1846.79 Q1606.45 1846.79 1610.49 1851.95 Q1614.56 1857.11 1614.56 1865.51 Q1614.56 1873.91 1610.49 1879.07 Q1606.45 1884.22 1599.95 1884.22 Q1596.04 1884.22 1593.21 1882.7 Q1590.41 1881.14 1588.56 1877.95 M1608.48 1865.51 Q1608.48 1859.05 1605.81 1855.39 Q1603.17 1851.7 1598.52 1851.7 Q1593.88 1851.7 1591.2 1855.39 Q1588.56 1859.05 1588.56 1865.51 Q1588.56 1871.97 1591.2 1875.66 Q1593.88 1879.32 1598.52 1879.32 Q1603.17 1879.32 1605.81 1875.66 Q1608.48 1871.97 1608.48 1865.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1624.27 1847.65 L1630.13 1847.65 L1630.13 1883.3 L1624.27 1883.3 L1624.27 1847.65 M1624.27 1833.78 L1630.13 1833.78 L1630.13 1841.19 L1624.27 1841.19 L1624.27 1833.78 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1668.04 1849.02 L1668.04 1854.5 Q1665.55 1853.13 1663.04 1852.46 Q1660.56 1851.76 1658.01 1851.76 Q1652.31 1851.76 1649.16 1855.39 Q1646.01 1858.98 1646.01 1865.51 Q1646.01 1872.03 1649.16 1875.66 Q1652.31 1879.26 1658.01 1879.26 Q1660.56 1879.26 1663.04 1878.59 Q1665.55 1877.89 1668.04 1876.52 L1668.04 1881.93 Q1665.59 1883.08 1662.94 1883.65 Q1660.33 1884.22 1657.37 1884.22 Q1649.32 1884.22 1644.58 1879.16 Q1639.84 1874.1 1639.84 1865.51 Q1639.84 1856.79 1644.61 1851.79 Q1649.42 1846.79 1657.76 1846.79 Q1660.46 1846.79 1663.04 1847.37 Q1665.62 1847.91 1668.04 1849.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1692.03 1851.76 Q1687.32 1851.76 1684.59 1855.45 Q1681.85 1859.11 1681.85 1865.51 Q1681.85 1871.91 1684.56 1875.6 Q1687.29 1879.26 1692.03 1879.26 Q1696.71 1879.26 1699.45 1875.57 Q1702.19 1871.87 1702.19 1865.51 Q1702.19 1859.17 1699.45 1855.48 Q1696.71 1851.76 1692.03 1851.76 M1692.03 1846.79 Q1699.67 1846.79 1704.03 1851.76 Q1708.39 1856.72 1708.39 1865.51 Q1708.39 1874.26 1704.03 1879.26 Q1699.67 1884.22 1692.03 1884.22 Q1684.36 1884.22 1680 1879.26 Q1675.67 1874.26 1675.67 1865.51 Q1675.67 1856.72 1680 1851.76 Q1684.36 1846.79 1692.03 1846.79 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"225.654,1734.12 225.654,47.2441 \"/>\n    <polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"225.654,1686.38 244.552,1686.38 \"/>\n    <polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"225.654,1169.51 244.552,1169.51 \"/>\n    <polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"225.654,652.654 244.552,652.654 \"/>\n    <polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"225.654,135.793 244.552,135.793 \"/>\n    <path clip-path=\"url(#clip280)\" d=\"M128.159 1672.17 Q124.548 1672.17 122.719 1675.74 Q120.913 1679.28 120.913 1686.41 Q120.913 1693.52 122.719 1697.08 Q124.548 1700.62 128.159 1700.62 Q131.793 1700.62 133.599 1697.08 Q135.427 1693.52 135.427 1686.41 Q135.427 1679.28 133.599 1675.74 Q131.793 1672.17 128.159 1672.17 M128.159 1668.47 Q133.969 1668.47 137.025 1673.08 Q140.103 1677.66 140.103 1686.41 Q140.103 1695.14 137.025 1699.74 Q133.969 1704.33 128.159 1704.33 Q122.349 1704.33 119.27 1699.74 Q116.214 1695.14 116.214 1686.41 Q116.214 1677.66 119.27 1673.08 Q122.349 1668.47 128.159 1668.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M148.321 1697.78 L153.205 1697.78 L153.205 1703.66 L148.321 1703.66 L148.321 1697.78 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M173.39 1672.17 Q169.779 1672.17 167.95 1675.74 Q166.145 1679.28 166.145 1686.41 Q166.145 1693.52 167.95 1697.08 Q169.779 1700.62 173.39 1700.62 Q177.024 1700.62 178.83 1697.08 Q180.659 1693.52 180.659 1686.41 Q180.659 1679.28 178.83 1675.74 Q177.024 1672.17 173.39 1672.17 M173.39 1668.47 Q179.2 1668.47 182.256 1673.08 Q185.334 1677.66 185.334 1686.41 Q185.334 1695.14 182.256 1699.74 Q179.2 1704.33 173.39 1704.33 Q167.58 1704.33 164.501 1699.74 Q161.446 1695.14 161.446 1686.41 Q161.446 1677.66 164.501 1673.08 Q167.58 1668.47 173.39 1668.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M129.386 1155.31 Q125.775 1155.31 123.946 1158.88 Q122.14 1162.42 122.14 1169.55 Q122.14 1176.66 123.946 1180.22 Q125.775 1183.76 129.386 1183.76 Q133.02 1183.76 134.825 1180.22 Q136.654 1176.66 136.654 1169.55 Q136.654 1162.42 134.825 1158.88 Q133.02 1155.31 129.386 1155.31 M129.386 1151.61 Q135.196 1151.61 138.251 1156.22 Q141.33 1160.8 141.33 1169.55 Q141.33 1178.28 138.251 1182.88 Q135.196 1187.47 129.386 1187.47 Q123.576 1187.47 120.497 1182.88 Q117.441 1178.28 117.441 1169.55 Q117.441 1160.8 120.497 1156.22 Q123.576 1151.61 129.386 1151.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M149.548 1180.91 L154.432 1180.91 L154.432 1186.79 L149.548 1186.79 L149.548 1180.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M165.427 1182.86 L173.066 1182.86 L173.066 1156.49 L164.756 1158.16 L164.756 1153.9 L173.02 1152.23 L177.696 1152.23 L177.696 1182.86 L185.334 1182.86 L185.334 1186.79 L165.427 1186.79 L165.427 1182.86 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M129.756 638.452 Q126.145 638.452 124.316 642.017 Q122.511 645.559 122.511 652.688 Q122.511 659.795 124.316 663.36 Q126.145 666.901 129.756 666.901 Q133.39 666.901 135.196 663.36 Q137.025 659.795 137.025 652.688 Q137.025 645.559 135.196 642.017 Q133.39 638.452 129.756 638.452 M129.756 634.749 Q135.566 634.749 138.622 639.355 Q141.7 643.938 141.7 652.688 Q141.7 661.415 138.622 666.022 Q135.566 670.605 129.756 670.605 Q123.946 670.605 120.867 666.022 Q117.812 661.415 117.812 652.688 Q117.812 643.938 120.867 639.355 Q123.946 634.749 129.756 634.749 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M149.918 664.054 L154.802 664.054 L154.802 669.934 L149.918 669.934 L149.918 664.054 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M169.015 665.998 L185.334 665.998 L185.334 669.934 L163.39 669.934 L163.39 665.998 Q166.052 663.244 170.635 658.614 Q175.242 653.961 176.422 652.619 Q178.668 650.096 179.547 648.36 Q180.45 646.6 180.45 644.911 Q180.45 642.156 178.506 640.42 Q176.584 638.684 173.483 638.684 Q171.284 638.684 168.83 639.448 Q166.399 640.212 163.622 641.762 L163.622 637.04 Q166.446 635.906 168.899 635.327 Q171.353 634.749 173.39 634.749 Q178.76 634.749 181.955 637.434 Q185.149 640.119 185.149 644.61 Q185.149 646.739 184.339 648.661 Q183.552 650.559 181.446 653.151 Q180.867 653.823 177.765 657.04 Q174.663 660.235 169.015 665.998 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M128.807 121.591 Q125.196 121.591 123.367 125.156 Q121.562 128.698 121.562 135.827 Q121.562 142.934 123.367 146.499 Q125.196 150.04 128.807 150.04 Q132.441 150.04 134.247 146.499 Q136.075 142.934 136.075 135.827 Q136.075 128.698 134.247 125.156 Q132.441 121.591 128.807 121.591 M128.807 117.888 Q134.617 117.888 137.673 122.494 Q140.751 127.077 140.751 135.827 Q140.751 144.554 137.673 149.161 Q134.617 153.744 128.807 153.744 Q122.997 153.744 119.918 149.161 Q116.863 144.554 116.863 135.827 Q116.863 127.077 119.918 122.494 Q122.997 117.888 128.807 117.888 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M148.969 147.193 L153.853 147.193 L153.853 153.073 L148.969 153.073 L148.969 147.193 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M178.205 134.439 Q181.561 135.156 183.436 137.425 Q185.334 139.693 185.334 143.026 Q185.334 148.142 181.816 150.943 Q178.297 153.744 171.816 153.744 Q169.64 153.744 167.325 153.304 Q165.034 152.888 162.58 152.031 L162.58 147.517 Q164.524 148.651 166.839 149.23 Q169.154 149.809 171.677 149.809 Q176.075 149.809 178.367 148.073 Q180.682 146.337 180.682 143.026 Q180.682 139.971 178.529 138.258 Q176.399 136.522 172.58 136.522 L168.552 136.522 L168.552 132.679 L172.765 132.679 Q176.214 132.679 178.043 131.314 Q179.872 129.925 179.872 127.332 Q179.872 124.67 177.973 123.258 Q176.098 121.823 172.58 121.823 Q170.659 121.823 168.46 122.24 Q166.26 122.656 163.622 123.536 L163.622 119.369 Q166.284 118.628 168.598 118.258 Q170.936 117.888 172.997 117.888 Q178.321 117.888 181.422 120.318 Q184.524 122.726 184.524 126.846 Q184.524 129.716 182.881 131.707 Q181.237 133.675 178.205 134.439 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M39.3585 1282.87 Q40.0587 1280.8 42.3504 1278.86 Q44.642 1276.89 48.6524 1274.91 L61.6384 1268.39 L61.6384 1275.3 L49.4481 1281.38 Q44.6738 1283.73 43.1142 1285.96 Q41.5546 1288.16 41.5546 1291.97 L41.5546 1298.98 L61.6384 1298.98 L61.6384 1305.41 L14.1184 1305.41 L14.1184 1290.89 Q14.1184 1282.74 17.5241 1278.73 Q20.9297 1274.72 27.8047 1274.72 Q32.2925 1274.72 35.2526 1276.82 Q38.2126 1278.89 39.3585 1282.87 M19.402 1298.98 L36.2711 1298.98 L36.2711 1290.89 Q36.2711 1286.25 34.1386 1283.89 Q31.9743 1281.5 27.8047 1281.5 Q23.6352 1281.5 21.5345 1283.89 Q19.402 1286.25 19.402 1290.89 L19.402 1298.98 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M42.3504 1232.81 L45.2149 1232.81 L45.2149 1259.73 Q51.2623 1259.35 54.4452 1256.1 Q57.5962 1252.83 57.5962 1247 Q57.5962 1243.63 56.7687 1240.48 Q55.9411 1237.29 54.2861 1234.17 L59.8242 1234.17 Q61.161 1237.33 61.8612 1240.64 Q62.5615 1243.95 62.5615 1247.35 Q62.5615 1255.88 57.5962 1260.88 Q52.631 1265.84 44.1646 1265.84 Q35.4117 1265.84 30.2873 1261.13 Q25.1311 1256.39 25.1311 1248.37 Q25.1311 1241.18 29.7781 1237.01 Q34.3932 1232.81 42.3504 1232.81 M40.6316 1238.66 Q35.8255 1238.73 32.9609 1241.37 Q30.0964 1243.98 30.0964 1248.31 Q30.0964 1253.21 32.8654 1256.17 Q35.6345 1259.1 40.6634 1259.54 L40.6316 1238.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M31.4013 1199.74 L12.1132 1199.74 L12.1132 1193.88 L61.6384 1193.88 L61.6384 1199.74 L56.2912 1199.74 Q59.4741 1201.58 61.0337 1204.41 Q62.5615 1207.22 62.5615 1211.16 Q62.5615 1217.62 57.4052 1221.7 Q52.249 1225.74 43.8463 1225.74 Q35.4436 1225.74 30.2873 1221.7 Q25.1311 1217.62 25.1311 1211.16 Q25.1311 1207.22 26.6907 1204.41 Q28.2185 1201.58 31.4013 1199.74 M43.8463 1219.69 Q50.3075 1219.69 53.9996 1217.05 Q57.6599 1214.38 57.6599 1209.73 Q57.6599 1205.08 53.9996 1202.41 Q50.3075 1199.74 43.8463 1199.74 Q37.3851 1199.74 33.7248 1202.41 Q30.0327 1205.08 30.0327 1209.73 Q30.0327 1214.38 33.7248 1217.05 Q37.3851 1219.69 43.8463 1219.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M47.5702 1182.42 L25.9905 1182.42 L25.9905 1176.56 L47.3474 1176.56 Q52.4082 1176.56 54.9545 1174.59 Q57.4689 1172.62 57.4689 1168.67 Q57.4689 1163.93 54.4452 1161.19 Q51.4215 1158.42 46.2016 1158.42 L25.9905 1158.42 L25.9905 1152.57 L61.6384 1152.57 L61.6384 1158.42 L56.1639 1158.42 Q59.4104 1160.55 61.0019 1163.39 Q62.5615 1166.19 62.5615 1169.91 Q62.5615 1176.06 58.742 1179.24 Q54.9226 1182.42 47.5702 1182.42 M25.1311 1167.68 L25.1311 1167.68 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M27.3591 1114.85 L32.8336 1114.85 Q31.465 1117.33 30.7966 1119.85 Q30.0964 1122.33 30.0964 1124.87 Q30.0964 1130.57 33.7248 1133.72 Q37.3214 1136.87 43.8463 1136.87 Q50.3711 1136.87 53.9996 1133.72 Q57.5962 1130.57 57.5962 1124.87 Q57.5962 1122.33 56.9278 1119.85 Q56.2276 1117.33 54.859 1114.85 L60.2698 1114.85 Q61.4156 1117.3 61.9886 1119.94 Q62.5615 1122.55 62.5615 1125.51 Q62.5615 1133.56 57.5007 1138.31 Q52.44 1143.05 43.8463 1143.05 Q35.1253 1143.05 30.1282 1138.27 Q25.1311 1133.47 25.1311 1125.13 Q25.1311 1122.42 25.704 1119.85 Q26.2451 1117.27 27.3591 1114.85 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M27.3591 1079.01 L32.8336 1079.01 Q31.465 1081.49 30.7966 1084.01 Q30.0964 1086.49 30.0964 1089.04 Q30.0964 1094.73 33.7248 1097.88 Q37.3214 1101.04 43.8463 1101.04 Q50.3711 1101.04 53.9996 1097.88 Q57.5962 1094.73 57.5962 1089.04 Q57.5962 1086.49 56.9278 1084.01 Q56.2276 1081.49 54.859 1079.01 L60.2698 1079.01 Q61.4156 1081.46 61.9886 1084.1 Q62.5615 1086.71 62.5615 1089.67 Q62.5615 1097.73 57.5007 1102.47 Q52.44 1107.21 43.8463 1107.21 Q35.1253 1107.21 30.1282 1102.44 Q25.1311 1097.63 25.1311 1089.29 Q25.1311 1086.59 25.704 1084.01 Q26.2451 1081.43 27.3591 1079.01 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M25.9905 1068.82 L25.9905 1062.97 L61.6384 1062.97 L61.6384 1068.82 L25.9905 1068.82 M12.1132 1068.82 L12.1132 1062.97 L19.5293 1062.97 L19.5293 1068.82 L12.1132 1068.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M30.0964 1036.9 Q30.0964 1041.61 33.7885 1044.35 Q37.4488 1047.09 43.8463 1047.09 Q50.2438 1047.09 53.9359 1044.38 Q57.5962 1041.64 57.5962 1036.9 Q57.5962 1032.22 53.9041 1029.48 Q50.212 1026.75 43.8463 1026.75 Q37.5124 1026.75 33.8203 1029.48 Q30.0964 1032.22 30.0964 1036.9 M25.1311 1036.9 Q25.1311 1029.26 30.0964 1024.9 Q35.0616 1020.54 43.8463 1020.54 Q52.5991 1020.54 57.5962 1024.9 Q62.5615 1029.26 62.5615 1036.9 Q62.5615 1044.57 57.5962 1048.93 Q52.5991 1053.26 43.8463 1053.26 Q35.0616 1053.26 30.0964 1048.93 Q25.1311 1044.57 25.1311 1036.9 M9.50331 1032.48 L9.50331 1026.14 L21.4708 1036.52 L21.4708 1041.39 L9.50331 1032.48 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M40.1224 981.201 L61.6384 981.201 L61.6384 987.057 L40.3133 987.057 Q35.2526 987.057 32.7381 989.031 Q30.2237 991.004 30.2237 994.951 Q30.2237 999.693 33.2474 1002.43 Q36.2711 1005.17 41.491 1005.17 L61.6384 1005.17 L61.6384 1011.06 L25.9905 1011.06 L25.9905 1005.17 L31.5287 1005.17 Q28.314 1003.07 26.7225 1000.23 Q25.1311 997.37 25.1311 993.646 Q25.1311 987.503 28.9505 984.352 Q32.7381 981.201 40.1224 981.201 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M31.4013 925.342 L12.1132 925.342 L12.1132 919.485 L61.6384 919.485 L61.6384 925.342 L56.2912 925.342 Q59.4741 927.188 61.0337 930.021 Q62.5615 932.822 62.5615 936.768 Q62.5615 943.229 57.4052 947.304 Q52.249 951.346 43.8463 951.346 Q35.4436 951.346 30.2873 947.304 Q25.1311 943.229 25.1311 936.768 Q25.1311 932.822 26.6907 930.021 Q28.2185 927.188 31.4013 925.342 M43.8463 945.298 Q50.3075 945.298 53.9996 942.657 Q57.6599 939.983 57.6599 935.336 Q57.6599 930.689 53.9996 928.015 Q50.3075 925.342 43.8463 925.342 Q37.3851 925.342 33.7248 928.015 Q30.0327 930.689 30.0327 935.336 Q30.0327 939.983 33.7248 942.657 Q37.3851 945.298 43.8463 945.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M42.3504 876.931 L45.2149 876.931 L45.2149 903.858 Q51.2623 903.476 54.4452 900.229 Q57.5962 896.951 57.5962 891.126 Q57.5962 887.752 56.7687 884.601 Q55.9411 881.418 54.2861 878.299 L59.8242 878.299 Q61.161 881.45 61.8612 884.76 Q62.5615 888.071 62.5615 891.476 Q62.5615 900.006 57.5962 905.003 Q52.631 909.969 44.1646 909.969 Q35.4117 909.969 30.2873 905.258 Q25.1311 900.516 25.1311 892.495 Q25.1311 885.302 29.7781 881.132 Q34.3932 876.931 42.3504 876.931 M40.6316 882.787 Q35.8255 882.851 32.9609 885.492 Q30.0964 888.102 30.0964 892.431 Q30.0964 897.333 32.8654 900.293 Q35.6345 903.221 40.6634 903.667 L40.6316 882.787 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M12.1132 846.598 L12.1132 840.742 L61.6384 840.742 L61.6384 846.598 L12.1132 846.598 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M43.719 812.287 Q43.719 819.385 45.3422 822.122 Q46.9655 824.859 50.8804 824.859 Q53.9996 824.859 55.8457 822.822 Q57.6599 820.753 57.6599 817.22 Q57.6599 812.351 54.2224 809.422 Q50.7531 806.462 45.0239 806.462 L43.719 806.462 L43.719 812.287 M41.3 800.606 L61.6384 800.606 L61.6384 806.462 L56.2276 806.462 Q59.4741 808.467 61.0337 811.459 Q62.5615 814.451 62.5615 818.78 Q62.5615 824.254 59.5059 827.501 Q56.4186 830.716 51.2623 830.716 Q45.2467 830.716 42.1912 826.705 Q39.1357 822.663 39.1357 814.674 L39.1357 806.462 L38.5628 806.462 Q34.5205 806.462 32.3244 809.136 Q30.0964 811.778 30.0964 816.584 Q30.0964 819.639 30.8284 822.536 Q31.5605 825.432 33.0246 828.106 L27.6137 828.106 Q26.3724 824.891 25.7677 821.867 Q25.1311 818.844 25.1311 815.979 Q25.1311 808.245 29.1415 804.425 Q33.1519 800.606 41.3 800.606 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M25.9905 767.822 L25.9905 761.966 L61.6384 761.966 L61.6384 767.822 L25.9905 767.822 M12.1132 767.822 L12.1132 761.966 L19.5293 761.966 L19.5293 767.822 L12.1132 767.822 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M32.8336 721.957 Q28.8869 719.761 27.009 716.706 Q25.1311 713.65 25.1311 709.513 Q25.1311 703.943 29.046 700.919 Q32.9291 697.895 40.1224 697.895 L61.6384 697.895 L61.6384 703.783 L40.3133 703.783 Q35.1889 703.783 32.7063 705.598 Q30.2237 707.412 30.2237 711.136 Q30.2237 715.687 33.2474 718.329 Q36.2711 720.971 41.491 720.971 L61.6384 720.971 L61.6384 726.859 L40.3133 726.859 Q35.1571 726.859 32.7063 728.673 Q30.2237 730.488 30.2237 734.275 Q30.2237 738.763 33.2792 741.405 Q36.3029 744.046 41.491 744.046 L61.6384 744.046 L61.6384 749.935 L25.9905 749.935 L25.9905 744.046 L31.5287 744.046 Q28.2503 742.041 26.6907 739.24 Q25.1311 736.439 25.1311 732.588 Q25.1311 728.705 27.1045 726 Q29.0779 723.262 32.8336 721.957 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M56.2912 680.549 L75.1974 680.549 L75.1974 686.437 L25.9905 686.437 L25.9905 680.549 L31.4013 680.549 Q28.2185 678.703 26.6907 675.902 Q25.1311 673.069 25.1311 669.154 Q25.1311 662.661 30.2873 658.619 Q35.4436 654.545 43.8463 654.545 Q52.249 654.545 57.4052 658.619 Q62.5615 662.661 62.5615 669.154 Q62.5615 673.069 61.0337 675.902 Q59.4741 678.703 56.2912 680.549 M43.8463 660.624 Q37.3851 660.624 33.7248 663.297 Q30.0327 665.939 30.0327 670.586 Q30.0327 675.233 33.7248 677.907 Q37.3851 680.549 43.8463 680.549 Q50.3075 680.549 53.9996 677.907 Q57.6599 675.233 57.6599 670.586 Q57.6599 665.939 53.9996 663.297 Q50.3075 660.624 43.8463 660.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M47.5702 645.442 L25.9905 645.442 L25.9905 639.585 L47.3474 639.585 Q52.4082 639.585 54.9545 637.612 Q57.4689 635.639 57.4689 631.692 Q57.4689 626.949 54.4452 624.212 Q51.4215 621.443 46.2016 621.443 L25.9905 621.443 L25.9905 615.587 L61.6384 615.587 L61.6384 621.443 L56.1639 621.443 Q59.4104 623.575 61.0019 626.408 Q62.5615 629.209 62.5615 632.933 Q62.5615 639.076 58.742 642.259 Q54.9226 645.442 47.5702 645.442 M25.1311 630.705 L25.1311 630.705 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M31.465 582.867 Q30.8921 583.853 30.6375 585.031 Q30.351 586.177 30.351 587.577 Q30.351 592.543 33.5975 595.216 Q36.8122 597.858 42.8596 597.858 L61.6384 597.858 L61.6384 603.746 L25.9905 603.746 L25.9905 597.858 L31.5287 597.858 Q28.2821 596.012 26.7225 593.052 Q25.1311 590.092 25.1311 585.859 Q25.1311 585.254 25.2266 584.522 Q25.2903 583.79 25.4494 582.899 L31.465 582.867 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M42.3504 547.664 L45.2149 547.664 L45.2149 574.591 Q51.2623 574.209 54.4452 570.963 Q57.5962 567.685 57.5962 561.86 Q57.5962 558.486 56.7687 555.335 Q55.9411 552.152 54.2861 549.033 L59.8242 549.033 Q61.161 552.184 61.8612 555.494 Q62.5615 558.804 62.5615 562.21 Q62.5615 570.74 57.5962 575.737 Q52.631 580.702 44.1646 580.702 Q35.4117 580.702 30.2873 575.992 Q25.1311 571.249 25.1311 563.229 Q25.1311 556.035 29.7781 551.866 Q34.3932 547.664 42.3504 547.664 M40.6316 553.521 Q35.8255 553.585 32.9609 556.226 Q30.0964 558.836 30.0964 563.165 Q30.0964 568.067 32.8654 571.027 Q35.6345 573.955 40.6634 574.4 L40.6316 553.521 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M25.9905 540.599 L25.9905 512.78 L31.3377 512.78 L56.9596 534.806 L56.9596 512.78 L61.6384 512.78 L61.6384 541.394 L56.2912 541.394 L30.6693 519.369 L30.6693 540.599 L25.9905 540.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M43.719 487.636 Q43.719 494.734 45.3422 497.471 Q46.9655 500.208 50.8804 500.208 Q53.9996 500.208 55.8457 498.171 Q57.6599 496.102 57.6599 492.569 Q57.6599 487.699 54.2224 484.771 Q50.7531 481.811 45.0239 481.811 L43.719 481.811 L43.719 487.636 M41.3 475.955 L61.6384 475.955 L61.6384 481.811 L56.2276 481.811 Q59.4741 483.816 61.0337 486.808 Q62.5615 489.8 62.5615 494.129 Q62.5615 499.603 59.5059 502.85 Q56.4186 506.065 51.2623 506.065 Q45.2467 506.065 42.1912 502.054 Q39.1357 498.012 39.1357 490.023 L39.1357 481.811 L38.5628 481.811 Q34.5205 481.811 32.3244 484.485 Q30.0964 487.127 30.0964 491.933 Q30.0964 494.988 30.8284 497.885 Q31.5605 500.781 33.0246 503.455 L27.6137 503.455 Q26.3724 500.24 25.7677 497.216 Q25.1311 494.193 25.1311 491.328 Q25.1311 483.594 29.1415 479.774 Q33.1519 475.955 41.3 475.955 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><circle clip-path=\"url(#clip282)\" cx=\"873.962\" cy=\"907.103\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"907.102\" cy=\"814.012\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"973.383\" cy=\"580.047\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"675.12\" cy=\"1373.19\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"890.532\" cy=\"854.546\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"857.392\" cy=\"958.03\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"882.247\" cy=\"867.842\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1039.66\" cy=\"300.591\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"832.537\" cy=\"1031.53\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"501.133\" cy=\"1624.7\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"666.835\" cy=\"1392.1\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"840.822\" cy=\"1019.51\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1155.65\" cy=\"124.516\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"484.563\" cy=\"1648.18\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1445.63\" cy=\"677.418\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"766.256\" cy=\"1179.85\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"757.971\" cy=\"1212.12\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"608.839\" cy=\"1517.74\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"799.396\" cy=\"1090.27\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"849.107\" cy=\"982.905\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"559.129\" cy=\"1584.59\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"998.238\" cy=\"483.731\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"989.953\" cy=\"548.502\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"774.541\" cy=\"1157.94\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"716.546\" cy=\"1314.87\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1023.09\" cy=\"443.31\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"650.265\" cy=\"1429.19\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1130.8\" cy=\"115.852\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"749.686\" cy=\"1243.71\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"931.958\" cy=\"671.486\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"658.55\" cy=\"1410.77\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1014.81\" cy=\"433.621\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"617.125\" cy=\"1483.01\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1288.22\" cy=\"268.299\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"699.975\" cy=\"1334.57\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"915.388\" cy=\"744.221\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1139.08\" cy=\"94.9858\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"956.813\" cy=\"656.569\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"534.274\" cy=\"1608.81\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1114.23\" cy=\"177.189\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"492.848\" cy=\"1640.4\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1064.52\" cy=\"225.07\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"865.677\" cy=\"919.984\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"592.269\" cy=\"1534.77\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1056.23\" cy=\"263.194\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1081.09\" cy=\"166.475\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"575.699\" cy=\"1568.19\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1097.66\" cy=\"172.14\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"409.998\" cy=\"1663.6\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"923.673\" cy=\"686.277\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1429.06\" cy=\"676.639\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1180.51\" cy=\"154.137\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"633.695\" cy=\"1456.36\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1122.51\" cy=\"156.951\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1188.8\" cy=\"155.854\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"542.559\" cy=\"1600.78\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"724.831\" cy=\"1284.8\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"641.98\" cy=\"1447.36\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"691.69\" cy=\"1354.01\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"807.681\" cy=\"1078.7\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"451.423\" cy=\"1655.91\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"791.111\" cy=\"1113.16\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"376.857\" cy=\"1671.24\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1213.65\" cy=\"128.076\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1031.38\" cy=\"426.046\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1412.49\" cy=\"632.654\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1172.23\" cy=\"151.861\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"965.098\" cy=\"611.05\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"550.844\" cy=\"1592.71\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1072.8\" cy=\"186.198\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"824.252\" cy=\"1067.04\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1205.37\" cy=\"134.034\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"683.405\" cy=\"1363.63\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"741.401\" cy=\"1274.63\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"583.984\" cy=\"1559.91\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"294.006\" cy=\"1678.83\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1006.52\" cy=\"467.177\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1453.92\" cy=\"715.175\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1777.04\" cy=\"1365.51\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1669.33\" cy=\"1201.7\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1578.19\" cy=\"1082.64\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1487.06\" cy=\"878.143\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1395.92\" cy=\"570.281\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1503.63\" cy=\"919.47\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1221.94\" cy=\"172.898\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1511.91\" cy=\"960.608\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1694.19\" cy=\"1233.36\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1404.21\" cy=\"641.48\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1644.47\" cy=\"1154.48\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1719.04\" cy=\"1277.87\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1710.76\" cy=\"1262.92\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1462.2\" cy=\"764.538\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1793.61\" cy=\"1402.7\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1371.07\" cy=\"416.668\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1470.49\" cy=\"777.027\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1594.76\" cy=\"1099.56\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1627.9\" cy=\"1132.71\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1553.34\" cy=\"1018.8\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"2572.4\" cy=\"1686.38\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1702.47\" cy=\"1247.74\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1163.94\" cy=\"149.018\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1313.07\" cy=\"288.02\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1279.93\" cy=\"312.705\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1743.9\" cy=\"1317.4\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1387.64\" cy=\"541.898\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1818.46\" cy=\"1438.15\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1246.79\" cy=\"272.457\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1354.5\" cy=\"345.136\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1379.35\" cy=\"510.447\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1495.34\" cy=\"899.01\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1652.76\" cy=\"1177.79\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1785.32\" cy=\"1378.29\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1362.78\" cy=\"363.507\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1263.36\" cy=\"292.759\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1810.18\" cy=\"1415.33\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1420.78\" cy=\"670.495\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"2133.29\" cy=\"1663.57\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1760.47\" cy=\"1345.16\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1735.61\" cy=\"1300.02\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1238.51\" cy=\"251.796\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1835.03\" cy=\"1461.59\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1586.48\" cy=\"1091.22\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1478.77\" cy=\"821.832\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1661.04\" cy=\"1184.18\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1569.91\" cy=\"1064.76\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1868.17\" cy=\"1516.09\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1984.16\" cy=\"1630.2\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1561.62\" cy=\"1028.29\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1843.32\" cy=\"1483.28\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1230.22\" cy=\"194.727\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1884.74\" cy=\"1549.48\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1951.02\" cy=\"1618.31\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1959.31\" cy=\"1628.4\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1321.36\" cy=\"307.396\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1727.33\" cy=\"1281.85\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1520.2\" cy=\"980.048\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"2265.86\" cy=\"1677\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1545.05\" cy=\"1009.08\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1089.37\" cy=\"192.019\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"2058.73\" cy=\"1648.2\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1619.62\" cy=\"1116.94\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1901.31\" cy=\"1570.55\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"2199.58\" cy=\"1667.52\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1677.62\" cy=\"1206.98\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1768.75\" cy=\"1347.62\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"2000.73\" cy=\"1638.36\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1917.88\" cy=\"1581.07\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1528.48\" cy=\"988.928\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1942.74\" cy=\"1615.16\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1437.35\" cy=\"688.065\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1801.89\" cy=\"1414.2\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"2439.84\" cy=\"1676.3\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1147.37\" cy=\"112.407\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1826.75\" cy=\"1450.37\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"2009.02\" cy=\"1644.85\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"2125.01\" cy=\"1657.49\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1859.89\" cy=\"1518.08\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1752.18\" cy=\"1328.42\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"2067.01\" cy=\"1654.37\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1851.6\" cy=\"1506.91\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1893.03\" cy=\"1560.44\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"1934.45\" cy=\"1590.9\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    <circle clip-path=\"url(#clip282)\" cx=\"2257.57\" cy=\"1672.06\" r=\"14.4\" fill=\"#009af9\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n    </svg>\n    ```\n    :::\n    :::\n    \n    \n    Y ahora obtenemos el valor óptimo de división del conjunto de datos según la longitud del pico.\n\n\n    ::: {#bf6aefe7 .cell execution_count=20}\n    ``` {.julia .cell-code}\n    val_optimo = valores[argmax(reducciones)]\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=167}\n    ```\n    42.3\n    ```\n    :::\n    :::\n    \n    \n    ::: \n\na.  Dividir aleatoriamente el dataframe en un conjunto de entrenamiento y un conjunto de test con proporciones $3/4$ y $1/4$ respectivamente.\n\n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    Utilizar la función [`shuffle`](https://docs.julialang.org/en/v1/stdlib/Random/#Random.shuffle) del paquete [`Random`](https://docs.julialang.org/en/v1/stdlib/Random/) para barajar el dataframe y luego dividirlo en dos subconjuntos.\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución    \n\n\n    ::: {#364c523a .cell execution_count=21}\n    ``` {.julia .cell-code}\n    using Random\n    # Establecemos la semilla para la reproducibilidad.\n    Random.seed!(1234)\n    # Barajamos el dataframe.\n    df = shuffle(df)\n    # Dividimos el dataframe en un conjunto de entrenamiento y un conjunto de test.\n    n = nrow(df)\n    df_test = df[1:div(n, 4), :]\n    df_train = df[div(n, 4)+1:end, :]\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=168}\n    ```{=html}\n    <div><div style = \"float: left;\"><span>250×7 DataFrame</span></div><div style = \"float: right;\"><span style = \"font-style: italic;\">225 rows omitted</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">Especie</th><th style = \"text-align: left;\">Isla</th><th style = \"text-align: left;\">Longitud_pico</th><th style = \"text-align: left;\">Profundidad_pico</th><th style = \"text-align: left;\">Longitud_ala</th><th style = \"text-align: left;\">Peso</th><th style = \"text-align: left;\">Sexo</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"String7\" style = \"text-align: left;\">String7</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">39.0</td><td style = \"text-align: right;\">18.7</td><td style = \"text-align: right;\">185</td><td style = \"text-align: right;\">3650</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">52.8</td><td style = \"text-align: right;\">20.0</td><td style = \"text-align: right;\">205</td><td style = \"text-align: right;\">4550</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">55.8</td><td style = \"text-align: right;\">19.8</td><td style = \"text-align: right;\">207</td><td style = \"text-align: right;\">4000</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">35.1</td><td style = \"text-align: right;\">19.4</td><td style = \"text-align: right;\">193</td><td style = \"text-align: right;\">4200</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">34.6</td><td style = \"text-align: right;\">21.1</td><td style = \"text-align: right;\">198</td><td style = \"text-align: right;\">4400</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Gentoo</td><td style = \"text-align: left;\">Biscoe</td><td style = \"text-align: right;\">50.0</td><td style = \"text-align: right;\">15.2</td><td style = \"text-align: right;\">218</td><td style = \"text-align: right;\">5700</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">50.6</td><td style = \"text-align: right;\">19.4</td><td style = \"text-align: right;\">193</td><td style = \"text-align: right;\">3800</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">43.5</td><td style = \"text-align: right;\">18.1</td><td style = \"text-align: right;\">202</td><td style = \"text-align: right;\">3400</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">36.9</td><td style = \"text-align: right;\">18.6</td><td style = \"text-align: right;\">189</td><td style = \"text-align: right;\">3500</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">36.6</td><td style = \"text-align: right;\">18.4</td><td style = \"text-align: right;\">184</td><td style = \"text-align: right;\">3475</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">46.6</td><td style = \"text-align: right;\">17.8</td><td style = \"text-align: right;\">193</td><td style = \"text-align: right;\">3800</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">Gentoo</td><td style = \"text-align: left;\">Biscoe</td><td style = \"text-align: right;\">50.8</td><td style = \"text-align: right;\">17.3</td><td style = \"text-align: right;\">228</td><td style = \"text-align: right;\">5600</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">52.2</td><td style = \"text-align: right;\">18.8</td><td style = \"text-align: right;\">197</td><td style = \"text-align: right;\">3450</td><td style = \"text-align: left;\">macho</td></tr><tr><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">239</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">39.8</td><td style = \"text-align: right;\">19.1</td><td style = \"text-align: right;\">184</td><td style = \"text-align: right;\">4650</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">240</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">43.1</td><td style = \"text-align: right;\">19.2</td><td style = \"text-align: right;\">197</td><td style = \"text-align: right;\">3500</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">241</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">49.8</td><td style = \"text-align: right;\">17.3</td><td style = \"text-align: right;\">198</td><td style = \"text-align: right;\">3675</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">242</td><td style = \"text-align: left;\">Gentoo</td><td style = \"text-align: left;\">Biscoe</td><td style = \"text-align: right;\">49.8</td><td style = \"text-align: right;\">15.9</td><td style = \"text-align: right;\">229</td><td style = \"text-align: right;\">5950</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">243</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">50.8</td><td style = \"text-align: right;\">18.5</td><td style = \"text-align: right;\">201</td><td style = \"text-align: right;\">4450</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">244</td><td style = \"text-align: left;\">Gentoo</td><td style = \"text-align: left;\">Biscoe</td><td style = \"text-align: right;\">50.7</td><td style = \"text-align: right;\">15.0</td><td style = \"text-align: right;\">223</td><td style = \"text-align: right;\">5550</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">245</td><td style = \"text-align: left;\">Gentoo</td><td style = \"text-align: left;\">Biscoe</td><td style = \"text-align: right;\">46.2</td><td style = \"text-align: right;\">14.1</td><td style = \"text-align: right;\">217</td><td style = \"text-align: right;\">4375</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">246</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">35.5</td><td style = \"text-align: right;\">17.5</td><td style = \"text-align: right;\">190</td><td style = \"text-align: right;\">3700</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">247</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Biscoe</td><td style = \"text-align: right;\">39.7</td><td style = \"text-align: right;\">18.9</td><td style = \"text-align: right;\">184</td><td style = \"text-align: right;\">3550</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">248</td><td style = \"text-align: left;\">Gentoo</td><td style = \"text-align: left;\">Biscoe</td><td style = \"text-align: right;\">47.7</td><td style = \"text-align: right;\">15.0</td><td style = \"text-align: right;\">216</td><td style = \"text-align: right;\">4750</td><td style = \"text-align: left;\">hembra</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">249</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">42.9</td><td style = \"text-align: right;\">17.6</td><td style = \"text-align: right;\">196</td><td style = \"text-align: right;\">4700</td><td style = \"text-align: left;\">macho</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">250</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">40.8</td><td style = \"text-align: right;\">18.9</td><td style = \"text-align: right;\">208</td><td style = \"text-align: right;\">4300</td><td style = \"text-align: left;\">macho</td></tr></tbody></table></div>\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Construir un árbol de decisión con el conjunto de entrenamiento sin tener en cuenta la variable `Isla` y visualizarlo.\n    \n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#67e2bb69 .cell execution_count=22}\n    ``` {.julia .cell-code}\n    using DecisionTree, CategoricalArrays\n    # Variables predictivas.\n    X_train = Matrix(select(df_train, Not(:Isla, :Especie)))\n    # Variable objetivo.\n    y_train = df_train.Especie\n    # Convertir las variables categóricas a enteros.\n    X_train = hcat([levelcode.(categorical(X_train[:, j])) for j in 1:size(X_train, 2)]...)\n    # Convertir la variable objetivo a enteros\n    y_train = levelcode.(categorical(y_train))\n    \n    # Construimos el árbol de decisión con profundidad máxima 3.\n    tree = DecisionTreeClassifier(max_depth = 3)\n    fit!(tree, X_train, y_train)\n    print_tree(tree, feature_names=names(df)[3:end])\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    Feature 3: \"Longitud_ala\" < 29.0 ?\n    ├─ Feature 1: \"Longitud_pico\" < 62.0 ?\n        ├─ 1 : 96/96\n        └─ Feature 1: \"Longitud_pico\" < 87.0 ?\n            ├─ 2 : 10/20\n            └─ 2 : 37/38\n    └─ Feature 2: \"Profundidad_pico\" < 46.0 ?\n        ├─ 3 : 90/90\n        └─ Feature 1: \"Longitud_pico\" < 109.0 ?\n            ├─ 1 : 2/2\n            └─ 2 : 4/4\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Predecir la especie de los pingüinos del conjunto de test y calcular la matriz de confusión de las predicciones.\n\n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    Utilizar la función [`confmat`](https://juliaai.github.io/StatisticalMeasures.jl/stable/confusion_matrices/#StatisticalMeasures.ConfusionMatrices.confmat) del paquete [`StatisticalMeaures`](https://juliaai.github.io/StatisticalMeasures.jl) para barajar el dataframe y luego dividirlo en dos subconjuntos.\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#8cfef7a8 .cell execution_count=23}\n    ``` {.julia .cell-code}\n    using StatisticalMeasures\n    # Variables predictivas\n    X_test = Matrix(select(df_test, Not(:Isla, :Especie)))\n    # Variable objetivo\n    y_test = df_test.Especie\n    # Convertir las variables categóricas a enteros\n    X_test = hcat([levelcode.(categorical(X_test[:, j])) for j in 1:size(X_test, 2)]...)\n    # Convertir la variable objetivo a enteros\n    y_test = levelcode.(categorical(y_test))\n    # Predecimos la especie de pingüino del conjunto de test\n    y_pred = predict(tree, X_test)\n    # Calculamos la precisión del modelo\n    confmat(y_pred, y_test)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=170}\n    ```\n              ┌──────────────┐\n              │ Ground Truth │\n    ┌─────────┼────┬────┬────┤\n    │Predicted│ 1  │ 2  │ 3  │\n    ├─────────┼────┼────┼────┤\n    │    1    │ 38 │ 11 │ 9  │\n    ├─────────┼────┼────┼────┤\n    │    2    │ 0  │ 6  │ 0  │\n    ├─────────┼────┼────┼────┤\n    │    3    │ 0  │ 0  │ 19 │\n    └─────────┴────┴────┴────┘\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Calcular la precisión del modelo.\n\n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    La precisión es la proporción de predicciones correctas sobre el total de predicciones.\n\n    Utilizar la función [`accuracy`](https://juliaai.github.io/StatisticalMeasures.jl/stable/auto_generated_list_of_measures/#StatisticalMeasures.Accuracy) del paquete [`StatisticalMeaures`](https://juliaai.github.io/StatisticalMeasures.jl) para calcular la precisión del modelo.\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#270a6183 .cell execution_count=24}\n    ``` {.julia .cell-code}\n    # Calculamos la precisión del modelo\n    accuracy(y_pred, y_test)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=171}\n    ```\n    0.7590361445783133\n    ```\n    :::\n    :::\n    \n    \n    :::\n\n:::\n\n:::{#exr-arboles-decision-3}\nEl fichero [`vinos.csv`](datos/vinos.csv) contiene información sobre las características de una muestra de vinos portugueses de la denominación \"Vinho Verde\". Las variables que contiene son:\n\n| Variable             | Descripción                                                           | Tipo (unidades)        |\n|----------------------------------------|-----------------------------------------------------------------------|------------------------|\n| tipo                 | Tipo de vino                                                          | Categórica (blanco, tinto) |\n| meses.barrica        | Mesesde envejecimiento en barrica                               | Numérica(meses)  |\n| acided.fija          | Cantidadde ácidotartárico                                 | Numérica(g/dm3)  |\n| acided.volatil       | Cantidad de ácido acético                                             | Numérica(g/dm3)  |\n| acido.citrico        | Cantidad de ácidocítrico                                        | Numérica(g/dm3)  |\n| azucar.residual      | Cantidad de azúcarremanente después de la fermentación          | Numérica(g/dm3)  |\n| cloruro.sodico       | Cantidad de clorurosódico                                       | Numérica(g/dm3)  |\n| dioxido.azufre.libre | Cantidad de dióxido de azufreen formalibre                | Numérica(mg/dm3) |\n| dioxido.azufre.total | Cantidadde dióxido de azufretotal en forma libre o ligada | Numérica(mg/dm3) |\n| densidad             | Densidad                                                              | Numérica(g/cm3)  |\n| ph                   | pH                                                                    | Numérica(0-14)   |\n| sulfatos             | Cantidadde sulfato de potasio                                   | Numérica(g/dm3)  |\n| alcohol              | Porcentajede contenidode alcohol                          | Numérica(0-100)  |\n| calidad              | Calificación otorgada porun panel de expertos                   | Numérica(0-10)   |\n\na.  Crear un data frame con los datos de los vinos a partir del fichero [`vinos.csv`](datos/vinos.csv).\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#9b9dc615 .cell execution_count=25}\n    ``` {.julia .cell-code}\n    using CSV, DataFrames\n    df = CSV.read(\"datos/vinos.csv\", DataFrame)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=172}\n    ```{=html}\n    <div><div style = \"float: left;\"><span>5320×14 DataFrame</span></div><div style = \"float: right;\"><span style = \"font-style: italic;\">5295 rows omitted</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">tipo</th><th style = \"text-align: left;\">meses_barrica</th><th style = \"text-align: left;\">acided_fija</th><th style = \"text-align: left;\">acided_volatil</th><th style = \"text-align: left;\">acido_citrico</th><th style = \"text-align: left;\">azucar_residual</th><th style = \"text-align: left;\">cloruro_sodico</th><th style = \"text-align: left;\">dioxido_azufre_libre</th><th style = \"text-align: left;\">dioxido_azufre_total</th><th style = \"text-align: left;\">densidad</th><th style = \"text-align: left;\">ph</th><th style = \"text-align: left;\">sulfatos</th><th style = \"text-align: left;\">alcohol</th><th style = \"text-align: left;\">calidad</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String7\" style = \"text-align: left;\">String7</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">blanco</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">7.0</td><td style = \"text-align: right;\">0.27</td><td style = \"text-align: right;\">0.36</td><td style = \"text-align: right;\">20.7</td><td style = \"text-align: right;\">0.045</td><td style = \"text-align: right;\">45.0</td><td style = \"text-align: right;\">170.0</td><td style = \"text-align: right;\">1.001</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">0.45</td><td style = \"text-align: right;\">8.8</td><td style = \"text-align: right;\">6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">blanco</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">6.3</td><td style = \"text-align: right;\">0.3</td><td style = \"text-align: right;\">0.34</td><td style = \"text-align: right;\">1.6</td><td style = \"text-align: right;\">0.049</td><td style = \"text-align: right;\">14.0</td><td style = \"text-align: right;\">132.0</td><td style = \"text-align: right;\">0.994</td><td style = \"text-align: right;\">3.3</td><td style = \"text-align: right;\">0.49</td><td style = \"text-align: right;\">9.5</td><td style = \"text-align: right;\">6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">blanco</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">8.1</td><td style = \"text-align: right;\">0.28</td><td style = \"text-align: right;\">0.4</td><td style = \"text-align: right;\">6.9</td><td style = \"text-align: right;\">0.05</td><td style = \"text-align: right;\">30.0</td><td style = \"text-align: right;\">97.0</td><td style = \"text-align: right;\">0.9951</td><td style = \"text-align: right;\">3.26</td><td style = \"text-align: right;\">0.44</td><td style = \"text-align: right;\">10.1</td><td style = \"text-align: right;\">6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">blanco</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">7.2</td><td style = \"text-align: right;\">0.23</td><td style = \"text-align: right;\">0.32</td><td style = \"text-align: right;\">8.5</td><td style = \"text-align: right;\">0.058</td><td style = \"text-align: right;\">47.0</td><td style = \"text-align: right;\">186.0</td><td style = \"text-align: right;\">0.9956</td><td style = \"text-align: right;\">3.19</td><td style = \"text-align: right;\">0.4</td><td style = \"text-align: right;\">9.9</td><td style = \"text-align: right;\">6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">blanco</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">6.2</td><td style = \"text-align: right;\">0.32</td><td style = \"text-align: right;\">0.16</td><td style = \"text-align: right;\">7.0</td><td style = \"text-align: right;\">0.045</td><td style = \"text-align: right;\">30.0</td><td style = \"text-align: right;\">136.0</td><td style = \"text-align: right;\">0.9949</td><td style = \"text-align: right;\">3.18</td><td style = \"text-align: right;\">0.47</td><td style = \"text-align: right;\">9.6</td><td style = \"text-align: right;\">6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">blanco</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">8.1</td><td style = \"text-align: right;\">0.22</td><td style = \"text-align: right;\">0.43</td><td style = \"text-align: right;\">1.5</td><td style = \"text-align: right;\">0.044</td><td style = \"text-align: right;\">28.0</td><td style = \"text-align: right;\">129.0</td><td style = \"text-align: right;\">0.9938</td><td style = \"text-align: right;\">3.22</td><td style = \"text-align: right;\">0.45</td><td style = \"text-align: right;\">11.0</td><td style = \"text-align: right;\">6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">blanco</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">8.1</td><td style = \"text-align: right;\">0.27</td><td style = \"text-align: right;\">0.41</td><td style = \"text-align: right;\">1.45</td><td style = \"text-align: right;\">0.033</td><td style = \"text-align: right;\">11.0</td><td style = \"text-align: right;\">63.0</td><td style = \"text-align: right;\">0.9908</td><td style = \"text-align: right;\">2.99</td><td style = \"text-align: right;\">0.56</td><td style = \"text-align: right;\">12.0</td><td style = \"text-align: right;\">5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">blanco</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">8.6</td><td style = \"text-align: right;\">0.23</td><td style = \"text-align: right;\">0.4</td><td style = \"text-align: right;\">4.2</td><td style = \"text-align: right;\">0.035</td><td style = \"text-align: right;\">17.0</td><td style = \"text-align: right;\">109.0</td><td style = \"text-align: right;\">0.9947</td><td style = \"text-align: right;\">3.14</td><td style = \"text-align: right;\">0.53</td><td style = \"text-align: right;\">9.7</td><td style = \"text-align: right;\">5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">blanco</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">7.9</td><td style = \"text-align: right;\">0.18</td><td style = \"text-align: right;\">0.37</td><td style = \"text-align: right;\">1.2</td><td style = \"text-align: right;\">0.04</td><td style = \"text-align: right;\">16.0</td><td style = \"text-align: right;\">75.0</td><td style = \"text-align: right;\">0.992</td><td style = \"text-align: right;\">3.18</td><td style = \"text-align: right;\">0.63</td><td style = \"text-align: right;\">10.8</td><td style = \"text-align: right;\">5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">blanco</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">6.6</td><td style = \"text-align: right;\">0.16</td><td style = \"text-align: right;\">0.4</td><td style = \"text-align: right;\">1.5</td><td style = \"text-align: right;\">0.044</td><td style = \"text-align: right;\">48.0</td><td style = \"text-align: right;\">143.0</td><td style = \"text-align: right;\">0.9912</td><td style = \"text-align: right;\">3.54</td><td style = \"text-align: right;\">0.52</td><td style = \"text-align: right;\">12.4</td><td style = \"text-align: right;\">7</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">blanco</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">8.3</td><td style = \"text-align: right;\">0.42</td><td style = \"text-align: right;\">0.62</td><td style = \"text-align: right;\">19.25</td><td style = \"text-align: right;\">0.04</td><td style = \"text-align: right;\">41.0</td><td style = \"text-align: right;\">172.0</td><td style = \"text-align: right;\">1.0002</td><td style = \"text-align: right;\">2.98</td><td style = \"text-align: right;\">0.67</td><td style = \"text-align: right;\">9.7</td><td style = \"text-align: right;\">5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">blanco</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">6.6</td><td style = \"text-align: right;\">0.17</td><td style = \"text-align: right;\">0.38</td><td style = \"text-align: right;\">1.5</td><td style = \"text-align: right;\">0.032</td><td style = \"text-align: right;\">28.0</td><td style = \"text-align: right;\">112.0</td><td style = \"text-align: right;\">0.9914</td><td style = \"text-align: right;\">3.25</td><td style = \"text-align: right;\">0.55</td><td style = \"text-align: right;\">11.4</td><td style = \"text-align: right;\">7</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">blanco</td><td style = \"text-align: right;\">0</td><td style = \"text-align: right;\">6.3</td><td style = \"text-align: right;\">0.48</td><td style = \"text-align: right;\">0.04</td><td style = \"text-align: right;\">1.1</td><td style = \"text-align: right;\">0.046</td><td style = \"text-align: right;\">30.0</td><td style = \"text-align: right;\">99.0</td><td style = \"text-align: right;\">0.9928</td><td style = \"text-align: right;\">3.24</td><td style = \"text-align: right;\">0.36</td><td style = \"text-align: right;\">9.6</td><td style = \"text-align: right;\">6</td></tr><tr><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5309</td><td style = \"text-align: left;\">tinto</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">7.5</td><td style = \"text-align: right;\">0.31</td><td style = \"text-align: right;\">0.41</td><td style = \"text-align: right;\">2.4</td><td style = \"text-align: right;\">0.065</td><td style = \"text-align: right;\">34.0</td><td style = \"text-align: right;\">60.0</td><td style = \"text-align: right;\">0.99492</td><td style = \"text-align: right;\">3.34</td><td style = \"text-align: right;\">0.85</td><td style = \"text-align: right;\">11.4</td><td style = \"text-align: right;\">6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5310</td><td style = \"text-align: left;\">tinto</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.8</td><td style = \"text-align: right;\">0.61</td><td style = \"text-align: right;\">0.11</td><td style = \"text-align: right;\">1.8</td><td style = \"text-align: right;\">0.066</td><td style = \"text-align: right;\">18.0</td><td style = \"text-align: right;\">28.0</td><td style = \"text-align: right;\">0.99483</td><td style = \"text-align: right;\">3.55</td><td style = \"text-align: right;\">0.66</td><td style = \"text-align: right;\">10.9</td><td style = \"text-align: right;\">6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5311</td><td style = \"text-align: left;\">tinto</td><td style = \"text-align: right;\">10</td><td style = \"text-align: right;\">7.2</td><td style = \"text-align: right;\">0.66</td><td style = \"text-align: right;\">0.33</td><td style = \"text-align: right;\">2.5</td><td style = \"text-align: right;\">0.068</td><td style = \"text-align: right;\">34.0</td><td style = \"text-align: right;\">102.0</td><td style = \"text-align: right;\">0.99414</td><td style = \"text-align: right;\">3.27</td><td style = \"text-align: right;\">0.78</td><td style = \"text-align: right;\">12.8</td><td style = \"text-align: right;\">6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5312</td><td style = \"text-align: left;\">tinto</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">6.6</td><td style = \"text-align: right;\">0.725</td><td style = \"text-align: right;\">0.2</td><td style = \"text-align: right;\">7.8</td><td style = \"text-align: right;\">0.073</td><td style = \"text-align: right;\">29.0</td><td style = \"text-align: right;\">79.0</td><td style = \"text-align: right;\">0.9977</td><td style = \"text-align: right;\">3.29</td><td style = \"text-align: right;\">0.54</td><td style = \"text-align: right;\">9.2</td><td style = \"text-align: right;\">5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5313</td><td style = \"text-align: left;\">tinto</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">6.3</td><td style = \"text-align: right;\">0.55</td><td style = \"text-align: right;\">0.15</td><td style = \"text-align: right;\">1.8</td><td style = \"text-align: right;\">0.077</td><td style = \"text-align: right;\">26.0</td><td style = \"text-align: right;\">35.0</td><td style = \"text-align: right;\">0.99314</td><td style = \"text-align: right;\">3.32</td><td style = \"text-align: right;\">0.82</td><td style = \"text-align: right;\">11.6</td><td style = \"text-align: right;\">6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5314</td><td style = \"text-align: left;\">tinto</td><td style = \"text-align: right;\">9</td><td style = \"text-align: right;\">5.4</td><td style = \"text-align: right;\">0.74</td><td style = \"text-align: right;\">0.09</td><td style = \"text-align: right;\">1.7</td><td style = \"text-align: right;\">0.089</td><td style = \"text-align: right;\">16.0</td><td style = \"text-align: right;\">26.0</td><td style = \"text-align: right;\">0.99402</td><td style = \"text-align: right;\">3.67</td><td style = \"text-align: right;\">0.56</td><td style = \"text-align: right;\">11.6</td><td style = \"text-align: right;\">6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5315</td><td style = \"text-align: left;\">tinto</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">6.3</td><td style = \"text-align: right;\">0.51</td><td style = \"text-align: right;\">0.13</td><td style = \"text-align: right;\">2.3</td><td style = \"text-align: right;\">0.076</td><td style = \"text-align: right;\">29.0</td><td style = \"text-align: right;\">40.0</td><td style = \"text-align: right;\">0.99574</td><td style = \"text-align: right;\">3.42</td><td style = \"text-align: right;\">0.75</td><td style = \"text-align: right;\">11.0</td><td style = \"text-align: right;\">6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5316</td><td style = \"text-align: left;\">tinto</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">6.8</td><td style = \"text-align: right;\">0.62</td><td style = \"text-align: right;\">0.08</td><td style = \"text-align: right;\">1.9</td><td style = \"text-align: right;\">0.068</td><td style = \"text-align: right;\">28.0</td><td style = \"text-align: right;\">38.0</td><td style = \"text-align: right;\">0.99651</td><td style = \"text-align: right;\">3.42</td><td style = \"text-align: right;\">0.82</td><td style = \"text-align: right;\">9.5</td><td style = \"text-align: right;\">6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5317</td><td style = \"text-align: left;\">tinto</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">6.2</td><td style = \"text-align: right;\">0.6</td><td style = \"text-align: right;\">0.08</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">0.09</td><td style = \"text-align: right;\">32.0</td><td style = \"text-align: right;\">44.0</td><td style = \"text-align: right;\">0.9949</td><td style = \"text-align: right;\">3.45</td><td style = \"text-align: right;\">0.58</td><td style = \"text-align: right;\">10.5</td><td style = \"text-align: right;\">5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5318</td><td style = \"text-align: left;\">tinto</td><td style = \"text-align: right;\">10</td><td style = \"text-align: right;\">5.9</td><td style = \"text-align: right;\">0.55</td><td style = \"text-align: right;\">0.1</td><td style = \"text-align: right;\">2.2</td><td style = \"text-align: right;\">0.062</td><td style = \"text-align: right;\">39.0</td><td style = \"text-align: right;\">51.0</td><td style = \"text-align: right;\">0.99512</td><td style = \"text-align: right;\">3.52</td><td style = \"text-align: right;\">0.76</td><td style = \"text-align: right;\">11.2</td><td style = \"text-align: right;\">6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5319</td><td style = \"text-align: left;\">tinto</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">5.9</td><td style = \"text-align: right;\">0.645</td><td style = \"text-align: right;\">0.12</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">0.075</td><td style = \"text-align: right;\">32.0</td><td style = \"text-align: right;\">44.0</td><td style = \"text-align: right;\">0.99547</td><td style = \"text-align: right;\">3.57</td><td style = \"text-align: right;\">0.71</td><td style = \"text-align: right;\">10.2</td><td style = \"text-align: right;\">5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5320</td><td style = \"text-align: left;\">tinto</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">6.0</td><td style = \"text-align: right;\">0.31</td><td style = \"text-align: right;\">0.47</td><td style = \"text-align: right;\">3.6</td><td style = \"text-align: right;\">0.067</td><td style = \"text-align: right;\">18.0</td><td style = \"text-align: right;\">42.0</td><td style = \"text-align: right;\">0.99549</td><td style = \"text-align: right;\">3.39</td><td style = \"text-align: right;\">0.66</td><td style = \"text-align: right;\">11.0</td><td style = \"text-align: right;\">6</td></tr></tbody></table></div>\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Mostrar los tipos de cada variable del data frame.\n\n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    Usar la función `schema` del paquete [`MLJ`](https://juliaai.github.io/MLJ.jl/).\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#eff9c3f7 .cell execution_count=26}\n    ``` {.julia .cell-code}\n    using MLJ\n    schema(df)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=173}\n    \n    ::: {.ansi-escaped-output}\n    ```{=html}\n    <pre>┌──────────────────────┬────────────┬─────────┐\n    │ names                │ scitypes   │ types   │\n    ├──────────────────────┼────────────┼─────────┤\n    │ tipo                 │ Textual    │ String7 │\n    │ meses_barrica        │ Count      │ Int64   │\n    │ acided_fija          │ Continuous │ Float64 │\n    │ acided_volatil       │ Continuous │ Float64 │\n    │ acido_citrico        │ Continuous │ Float64 │\n    │ azucar_residual      │ Continuous │ Float64 │\n    │ cloruro_sodico       │ Continuous │ Float64 │\n    │ dioxido_azufre_libre │ Continuous │ Float64 │\n    │ dioxido_azufre_total │ Continuous │ Float64 │\n    │ densidad             │ Continuous │ Float64 │\n    │ ph                   │ Continuous │ Float64 │\n    │ sulfatos             │ Continuous │ Float64 │\n    │ alcohol              │ Continuous │ Float64 │\n    │ calidad              │ Count      │ Int64   │\n    └──────────────────────┴────────────┴─────────┘\n    </pre>\n    ```\n    :::\n    \n    :::\n    :::\n    \n    \n    :::\n\na.  Hacer un análisis de los datos perdidos en el data frame.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#db99a86e .cell execution_count=27}\n    ``` {.julia .cell-code}\n    describe(df, :nmissing)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=174}\n    ```{=html}\n    <div><div style = \"float: left;\"><span>14×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">variable</th><th style = \"text-align: left;\">nmissing</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Symbol\" style = \"text-align: left;\">Symbol</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">tipo</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">meses_barrica</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">acided_fija</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">acided_volatil</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">acido_citrico</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">azucar_residual</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">cloruro_sodico</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">dioxido_azufre_libre</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">dioxido_azufre_total</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">densidad</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">ph</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">sulfatos</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">alcohol</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">14</td><td style = \"text-align: left;\">calidad</td><td style = \"text-align: right;\">0</td></tr></tbody></table></div>\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Mostrar la distribución de frecuencias de las variables cuantitativas del data frame mediante histogramas.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#2c8d8263 .cell execution_count=28}\n    ``` {.julia .cell-code}\n    using GLMakie\n    fig = Figure() \n    ax = [Axis(fig[trunc(Int, i / 3), i % 3], title = names(df)[i+2]) for i in 0:12]\n    for i in 1:13\n        hist!(ax[i], df[!, i+1], strokewidth = 0.5, strokecolor = (:white, 0.5))\n    end\n    fig\n    ```\n    \n    ::: {.cell-output .cell-output-stderr}\n    ```\n    ┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n    └ @ Makie ~/.julia/packages/Makie/ux0Te/src/scenes.jl:238\n    ```\n    :::\n    \n    ::: {.cell-output .cell-output-display execution_count=175}\n    ![](07-arboles-decision_files/figure-html/cell-28-output-2.svg){}\n    :::\n    :::\n    \n    \n    :::\n\na.  Se considera que un vino es bueno si tiene una puntuación de calidad mayor que $6.5$. Recodificar la variable `calidad` en una variable categórica que tome el valor 1 si la calidad es mayor que $6.5$ y 0 en caso contrario.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#abf821b9 .cell execution_count=29}\n    ``` {.julia .cell-code}\n    using CategoricalArrays\n    # Recodificamos la variable calidad.\n    df.calidad = cut(df.calidad, [0, 6.5, 10], labels = [\" ☹️ \", \" 😊 \"])\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=176}\n    ```\n    5320-element CategoricalArray{String,1,UInt32}:\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" 😊 \"\n     \" ☹️ \"\n     \" 😊 \"\n     \" ☹️ \"\n     ⋮\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Descomponer el data frame en un data frame con las variables predictivas y un vector con la variable objetivo `bueno`.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#14789c8a .cell execution_count=30}\n    ``` {.julia .cell-code}\n    y, X = unpack(df, ==(:calidad), rng = 123)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=177}\n    \n    ::: {.ansi-escaped-output}\n    ```{=html}\n    <pre>(CategoricalValue{String, UInt32}[\" ☹️ \", \" ☹️ \", \" ☹️ \", \" ☹️ \", \" ☹️ \", \" 😊 \", \" ☹️ \", \" ☹️ \", \" ☹️ \", \" ☹️ \"  …  \" ☹️ \", \" ☹️ \", \" ☹️ \", \" ☹️ \", \" ☹️ \", \" ☹️ \", \" ☹️ \", \" ☹️ \", \" ☹️ \", \" ☹️ \"], <span class=\"ansi-bold\">5320×13 DataFrame</span>\n    <span class=\"ansi-bold\">  Row </span>│<span class=\"ansi-bold\"> tipo    </span><span class=\"ansi-bold\"> meses_barrica </span><span class=\"ansi-bold\"> acided_fija </span><span class=\"ansi-bold\"> acided_volatil </span><span class=\"ansi-bold\"> acido_citrico </span><span class=\"ansi-bold\"> az</span> ⋯\n          │<span class=\"ansi-bright-black-fg\"> String7 </span><span class=\"ansi-bright-black-fg\"> Int64         </span><span class=\"ansi-bright-black-fg\"> Float64     </span><span class=\"ansi-bright-black-fg\"> Float64        </span><span class=\"ansi-bright-black-fg\"> Float64       </span><span class=\"ansi-bright-black-fg\"> Fl</span> ⋯\n    ──────┼─────────────────────────────────────────────────────────────────────────\n        1 │ blanco               0          6.7           0.5             0.36     ⋯\n        2 │ blanco               0          6.3           0.2             0.3\n        3 │ blanco               0          6.2           0.35            0.03\n        4 │ tinto                3          8.0           0.39            0.3\n        5 │ blanco               0          7.9           0.255           0.26     ⋯\n        6 │ blanco               0          6.1           0.31            0.37\n        7 │ blanco               0          6.8           0.28            0.36\n        8 │ blanco               0          8.2           0.34            0.49\n        9 │ tinto                0          6.7           0.48            0.02     ⋯\n       10 │ blanco               0          7.4           0.35            0.2\n       11 │ tinto                5          7.5           0.53            0.06\n      ⋮   │    ⋮           ⋮             ⋮             ⋮               ⋮           ⋱\n     5311 │ blanco               0          7.2           0.14            0.35\n     5312 │ tinto                3          7.6           0.41            0.24     ⋯\n     5313 │ tinto                0          7.3           0.4             0.3\n     5314 │ tinto                4          7.1           0.48            0.28\n     5315 │ blanco               0          6.4           0.29            0.2\n     5316 │ blanco               0          9.4           0.24            0.29     ⋯\n     5317 │ blanco               0          6.3           0.25            0.27\n     5318 │ blanco               0          5.5           0.16            0.26\n     5319 │ blanco               0          7.4           0.36            0.32\n     5320 │ blanco               0          7.6           0.51            0.24     ⋯\n    <span class=\"ansi-cyan-fg\">                                                 8 columns and 5299 rows omitted</span>)</pre>\n    ```\n    :::\n    \n    :::\n    :::\n    \n    \n    :::\n\na.  Para poder entrenar un modelo de un arbol de decisión, las variables predictivas deben ser cuantitativas. Transmformar las variables categóricas en variables numéricas.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#9529bca9 .cell execution_count=31}\n    ``` {.julia .cell-code}\n    # Convertir las variables categóricas a enteros.\n    coerce!(X, :tipo => OrderedFactor, :meses_barrica => Continuous)\n    schema(X)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=178}\n    \n    ::: {.ansi-escaped-output}\n    ```{=html}\n    <pre>┌──────────────────────┬──────────────────┬───────────────────────────────────┐\n    │ names                │ scitypes         │ types                             │\n    ├──────────────────────┼──────────────────┼───────────────────────────────────┤\n    │ tipo                 │ OrderedFactor{2} │ CategoricalValue{String7, UInt32} │\n    │ meses_barrica        │ Continuous       │ Float64                           │\n    │ acided_fija          │ Continuous       │ Float64                           │\n    │ acided_volatil       │ Continuous       │ Float64                           │\n    │ acido_citrico        │ Continuous       │ Float64                           │\n    │ azucar_residual      │ Continuous       │ Float64                           │\n    │ cloruro_sodico       │ Continuous       │ Float64                           │\n    │ dioxido_azufre_libre │ Continuous       │ Float64                           │\n    │ dioxido_azufre_total │ Continuous       │ Float64                           │\n    │ densidad             │ Continuous       │ Float64                           │\n    │ ph                   │ Continuous       │ Float64                           │\n    │ sulfatos             │ Continuous       │ Float64                           │\n    │ alcohol              │ Continuous       │ Float64                           │\n    └──────────────────────┴──────────────────┴───────────────────────────────────┘\n    </pre>\n    ```\n    :::\n    \n    :::\n    :::\n    \n    \n    :::\n\na.  Definir un modelo de árbol de decisión con profundidad máxima 3.\n\n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    Cargar el modelo `DecisionTreeClassifier` del paquete [`DecisionTree`](https://docs.juliahub.com/DecisionTree/) con la macros `@iload`.\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#4b01726f .cell execution_count=32}\n    ``` {.julia .cell-code}\n    # Cargamos el tipo de modelo.\n    Tree = @iload DecisionTreeClassifier pkg = \"DecisionTree\"\n    # Instanciamos el modelo con sus parámetros.\n    arbol = Tree(max_depth =3, rng = 123)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    import MLJDecisionTreeInterface ✔\n    ```\n    :::\n    \n    ::: {.cell-output .cell-output-stderr}\n    ```\n    [ Info: For silent loading, specify `verbosity=0`. \n    ```\n    :::\n    \n    ::: {.cell-output .cell-output-display execution_count=179}\n    ```\n    DecisionTreeClassifier(\n      max_depth = 3, \n      min_samples_leaf = 1, \n      min_samples_split = 2, \n      min_purity_increase = 0.0, \n      n_subfeatures = 0, \n      post_prune = false, \n      merge_purity_threshold = 1.0, \n      display_depth = 5, \n      feature_importance = :impurity, \n      rng = 123)\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Evaluar el modelo tomando un 70% de ejemplos en el conjunto de entrenamiento y un 30% en el conjunto de test. Utilizar como métrica la precisión.\n\n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    Usar la función [`evaluate`](https://juliaai.github.io/MLJ.jl/stable/evaluating_model_performance/#MLJBase.evaluate!) del paquete [`MLJ`](https://juliaai.github.io/MLJ.jl/) para evaluar el modelo. Los parámetros más importantes de esta función son:\n\n    - `resampling`: Indica el método de muestreo para definir los conjuntos de entrenamiento y test. Los métodos más habituales son:\n        - `Holdout(fraction_train = p)`: Divide el conjunto de datos tomando una proporción de $p$ ejemplos en el conjunto de entrenamiento y $1-p$ en el conjunto de test.\n        - `CV(nfolds = n, shuffle = true|false)`: Utiliza validación cruzada con `n` iteraciones. Si se indica `shuffle = true`, se utiliza validación cruzada aleatoria.\n        - `StratifiedCV(nfolds = n, shuffle = true|false)`: Utiliza validación cruzada estratificada con `n` iteraciones. Si se indica `shuffle = true`, se utiliza validación cruzada estratificada aleatoria.\n        - `InSample()`: Utiliza el conjunto de entrenamiento como conjunto de test.\n  \n    - `measures`: Indica las métricas a utilizar para evaluar el modelo. Las métricas más habituales son:\n        - `cross_entropy`: Pérdida de entropía cruzada.\n        - `confusion_matrix`: Matriz de confusión.\n        - `true_positive_rate`: Tasa de verdaderos positivos.\n        - `true_negative_rate`: Tasa de verdaderos negativos.\n        - `ppv`: Valor predictivo positivo.\n        - `npv`: Valor predictivo negativo.\n        - `accuracy`: Precisión.\n    \n        Se puede indicar más de una en un vector.\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#476d5b1c .cell execution_count=33}\n    ``` {.julia .cell-code}\n    evaluate(arbol, X, y, resampling = Holdout(fraction_train = 0.7, rng = 123), measures = accuracy)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=180}\n    \n    ::: {.ansi-escaped-output}\n    ```{=html}\n    <pre>PerformanceEvaluation object with these fields:\n      model, measure, operation,\n      measurement, per_fold, per_observation,\n      fitted_params_per_fold, report_per_fold,\n      train_test_rows, resampling, repeats\n    Extract:\n    ┌────────────┬──────────────┬─────────────┐\n    │ measure    │ operation    │ measurement │\n    ├────────────┼──────────────┼─────────────┤\n    │ Accuracy() │ predict_mode │ 0.843       │\n    └────────────┴──────────────┴─────────────┘\n    </pre>\n    ```\n    :::\n    \n    :::\n    :::\n    \n    \n    :::\n\na.  Evaluar el modelo mediante validación cruzada estratificada usando las métricas de la pérdida de entropía cruzada, la matriz de confusión, la tasa de verdaderos positivos, la tasa de verdaderos negativos, el valor predictivo positivo, el valor predictivo negativo y la precisión. ¿Es un buen modelo?\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#6876d19f .cell execution_count=34}\n    ``` {.julia .cell-code}\n    evaluate(arbol, X, y, resampling = StratifiedCV(rng = 123), measures = [cross_entropy, confusion_matrix, true_positive_rate, true_negative_rate, ppv, npv, accuracy])\n    ```\n    \n    ::: {.cell-output .cell-output-stderr}\n    ```\n    \rEvaluating over 6 folds:  83%[====================>    ]  ETA: 0:00:00\rEvaluating over 6 folds: 100%[=========================] Time: 0:00:00\n    ```\n    :::\n    \n    ::: {.cell-output .cell-output-display execution_count=181}\n    \n    ::: {.ansi-escaped-output}\n    ```{=html}\n    <pre>PerformanceEvaluation object with these fields:\n      model, measure, operation,\n      measurement, per_fold, per_observation,\n      fitted_params_per_fold, report_per_fold,\n      train_test_rows, resampling, repeats\n    Extract:\n    ┌───┬──────────────────────────┬──────────────┬─────────────────────────────────\n    │   │ measure                  │ operation    │ measurement                    ⋯\n    ├───┼──────────────────────────┼──────────────┼─────────────────────────────────\n    │ A │ LogLoss(                 │ predict      │ 0.375                          ⋯\n    │   │   tol = 2.22045e-16)     │              │                                ⋯\n    │ B │ ConfusionMatrix(         │ predict_mode │ ConfusionMatrix{2}([3821534 78 ⋯\n    │   │   levels = nothing,      │              │                                ⋯\n    │   │   perm = nothing,        │              │                                ⋯\n    │   │   rev = nothing,         │              │                                ⋯\n    │   │   checks = true)         │              │                                ⋯\n    │ C │ TruePositiveRate(        │ predict_mode │ 0.128                          ⋯\n    │   │   levels = nothing,      │              │                                ⋯\n    │   │   rev = nothing,         │              │                                ⋯\n    │   │   checks = true)         │              │                                ⋯\n    │ D │ TrueNegativeRate(        │ predict_mode │ 1.0                            ⋯\n    │   │   levels = nothing,      │              │                                ⋯\n    │   │   rev = nothing,         │              │                                ⋯\n    │   │   checks = true)         │              │                                ⋯\n    │ E │ PositivePredictiveValue( │ predict_mode │ 0.994                          ⋯\n    │   │   levels = nothing,      │              │                                ⋯\n    │   │   rev = nothing,         │              │                                ⋯\n    │   │   checks = true)         │              │                                ⋯\n    │ F │ NegativePredictiveValue( │ predict_mode │ 0.83                           ⋯\n    │   │   levels = nothing,      │              │                                ⋯\n    │   │   rev = nothing,         │              │                                ⋯\n    │ ⋮ │            ⋮             │      ⋮       │                        ⋮       ⋱\n    └───┴──────────────────────────┴──────────────┴─────────────────────────────────\n    <span class=\"ansi-cyan-fg\">                                                     1 column and 2 rows omitted</span>\n    ┌───┬───────────────────────────────────────────────────────────────────────────\n    │   │ per_fold                                                                 ⋯\n    ├───┼───────────────────────────────────────────────────────────────────────────\n    │ A │ [0.391, 0.394, 0.35, 0.358, 0.365, 0.391]                                ⋯\n    │ B │ ConfusionMatrix{2, true, CategoricalValue{String, UInt32}}[ConfusionMatr ⋯\n    │ C │ [0.125, 0.167, 0.155, 0.112, 0.113, 0.0952]                              ⋯\n    │ D │ [1.0, 0.999, 1.0, 1.0, 1.0, 1.0]                                         ⋯\n    │ E │ [1.0, 0.966, 1.0, 1.0, 1.0, 1.0]                                         ⋯\n    │ F │ [0.83, 0.837, 0.835, 0.827, 0.828, 0.825]                                ⋯\n    │ G │ [0.834, 0.841, 0.84, 0.831, 0.832, 0.828]                                ⋯\n    └───┴───────────────────────────────────────────────────────────────────────────\n    <span class=\"ansi-cyan-fg\">                                                               2 columns omitted</span>\n    </pre>\n    ```\n    :::\n    \n    :::\n    :::\n    \n    \n    La precisión del modelo es de $0.834$ que no está mal, pero si consdieramos la tasa de verdadero positivos, que es $0.13$ y la tasa de verdaderos negativos, que es prácticamente 1, el modelo tiene un buen rendimiento en la clasificación de los vinos malos, pero un mal rendimiento en la clasificación de los vinos buenos. Por lo tanto, no podemos decir que sea un buen modelo.\n    :::\n\na.  Construir árboles de decisión con profundidades máximas de 2 a 10 y evaluar el modelo con validación cruzada estratificada. ¿Cuál es la profundidad máxima que da mejor resultado?\n\n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    Usar la función [`TunedModel`](https://juliaai.github.io/MLJ.jl/stable/tuning_models/#MLJTuning.TunedModel) del paquete [`MLJ`](https://juliaai.github.io/MLJ.jl/) para ajustar los parámetros del modelo.\n\n    Los parámetros más importantes de esta función son:\n    - `model`: Indica el modelo a ajustar.\n    - `resampling`: Indica el método de muestreo para definir los conjuntos de entrenamiento y test.\n    - `tuning`: Indica el método de ajuste de los parámetros del modelo. Los métodos más habituales son:\n        - `Grid(resolution = n)`: Ajusta los parámetros del modelo utilizando una cuadrícula de búsqueda con `n` valores.\n        - `RandomSearch(resolution = n)`: Ajusta los parámetros del modelo utilizando una búsqueda aleatoria con `n` valores.\n    - range: Indica el rango de valores a utilizar para ajustar los parámetros del modelo. Se puede indicar un rango de valores o un vector de valores.\n    - `measure`: Indica la métrica a utilizar para evaluar el modelo.\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#b1627391 .cell execution_count=35}\n    ``` {.julia .cell-code}\n    # Instanciamos el modelo de árbol de decisión.\n    arbol = Tree()\n    # Definimos el rango de valores a utilizar para ajustar los parámetros del modelo.\n    r = range(arbol, :max_depth, lower=2, upper=10)\n    # Ajustamos los parámetros del modelo utilizando una cuadrícula de búsqueda con 9 valores.\n    arbol_parametrizado = TunedModel(\n        model = arbol,\n        resampling = StratifiedCV(rng = 123),\n        tuning = Grid(resolution = 9),\n        range = r,\n        measure = accuracy)\n    # Definimos una máquina de aprendizaje con el modelo, las variables predictivas y la variable objetivo.\n    mach = machine(arbol_parametrizado, X, y)\n    # Ajustamos los parámetros del modelo.\n    MLJ.fit!(mach)\n    # Mostramos los parámetros del mejor modelo.\n    fitted_params(mach).best_model\n    ```\n    \n    ::: {.cell-output .cell-output-stderr}\n    ```\n    [ Info: Training machine(ProbabilisticTunedModel(model = DecisionTreeClassifier(max_depth = -1, …), …), …).\n    [ Info: Attempting to evaluate 9 models.\n    \rEvaluating over 9 metamodels:  22%[=====>                   ]  ETA: 0:00:01\rEvaluating over 9 metamodels:  33%[========>                ]  ETA: 0:00:01\rEvaluating over 9 metamodels:  44%[===========>             ]  ETA: 0:00:01\rEvaluating over 9 metamodels:  56%[=============>           ]  ETA: 0:00:01\rEvaluating over 9 metamodels:  67%[================>        ]  ETA: 0:00:01\rEvaluating over 9 metamodels:  78%[===================>     ]  ETA: 0:00:00\rEvaluating over 9 metamodels:  89%[======================>  ]  ETA: 0:00:00\rEvaluating over 9 metamodels: 100%[=========================] Time: 0:00:01\n    ```\n    :::\n    \n    ::: {.cell-output .cell-output-display execution_count=182}\n    ```\n    DecisionTreeClassifier(\n      max_depth = 5, \n      min_samples_leaf = 1, \n      min_samples_split = 2, \n      min_purity_increase = 0.0, \n      n_subfeatures = 0, \n      post_prune = false, \n      merge_purity_threshold = 1.0, \n      display_depth = 5, \n      feature_importance = :impurity, \n      rng = TaskLocalRNG())\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Dibujar la curva de aprendizaje del modelo en función de la profundidad del árbol de decisión.\n\n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    Usar la función [`learning_curve`](https://juliaai.github.io/MLJ.jl/stable/learning_curves/#MLJBase.learning_curve) del paquete [`MLJ`](https://juliaai.github.io/MLJ.jl/) para dibujar la curva de aprendizaje.\n    Los parámetros más importantes de esta función son:\n    - `mach`: Indica la máquina de aprendizaje a utilizar.\n    - `range`: Indica el rango de valores a utilizar para ajustar los parámetros del modelo.\n    - `resampling`: Indica el método de muestreo para definir los conjuntos de entrenamiento y test.\n    - `measure`: Indica la métrica a utilizar para evaluar el modelo.\n    - `rngs`: Indica la semilla para la generación de números aleatorios. Se pueden indicar varias semillas en un vector y se genera una curva de aprendizaje para cada semilla.\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#50e426e3 .cell execution_count=36}\n    ``` {.julia .cell-code}\n    # Instanciamos el modelo de árbol de decisión.\n    arbol = Tree()\n    # Definimos una máquina de aprendizaje con el modelo, las variables predictivas y la variable objetivo.\n    mach = machine(arbol, X, y)\n    # Definimos el rango de valores a utilizar para ajustar los parámetros del modelo.\n    r = range(arbol, :max_depth, lower=2, upper=10)\n    # Dibujamos la curva de aprendizaje.\n    curva = learning_curve(mach, range = r, resampling = StratifiedCV(rng = 123), measure = accuracy)\n    # Dibujamos la curva de aprendizaje.\n    fig = Figure()\n    ax = Axis(fig[1, 1], title = \"Curva de aprendizaje\", xlabel = \"Profundidad del árbol\", ylabel = \"Precisión\")\n    Makie.scatter!(ax, curva.parameter_values, curva.measurements)\n    fig\n    ```\n    \n    ::: {.cell-output .cell-output-stderr}\n    ```\n    [ Info: Training machine(ProbabilisticTunedModel(model = DecisionTreeClassifier(max_depth = -1, …), …), …).\n    [ Info: Attempting to evaluate 9 models.\n    \rEvaluating over 9 metamodels:  22%[=====>                   ]  ETA: 0:00:01\rEvaluating over 9 metamodels:  33%[========>                ]  ETA: 0:00:01\rEvaluating over 9 metamodels:  44%[===========>             ]  ETA: 0:00:01\rEvaluating over 9 metamodels:  56%[=============>           ]  ETA: 0:00:01\rEvaluating over 9 metamodels:  67%[================>        ]  ETA: 0:00:01\rEvaluating over 9 metamodels:  78%[===================>     ]  ETA: 0:00:00\rEvaluating over 9 metamodels:  89%[======================>  ]  ETA: 0:00:00\rEvaluating over 9 metamodels: 100%[=========================] Time: 0:00:01\n    ┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n    └ @ Makie ~/.julia/packages/Makie/ux0Te/src/scenes.jl:238\n    ```\n    :::\n    \n    ::: {.cell-output .cell-output-display execution_count=183}\n    ![](07-arboles-decision_files/figure-html/cell-36-output-2.svg){}\n    :::\n    :::\n    \n    \n    :::\n\na.  Construir un árbol de decisión con la profundidad máxima que da mejor resultado y visualizarlo.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#f20bb652 .cell execution_count=37}\n    ``` {.julia .cell-code}\n    # Instanciamos el modelo de árbol de decisión.\n    arbol = Tree(max_depth = 4)\n    # Definimos una máquina de aprendizaje con el modelo, las variables predictivas y la variable objetivo.\n    mach = machine(arbol, X, y)\n    # Ajustamos los parámetros del modelo.\n    MLJ.fit!(mach)\n    # Visualizamos el árbol de decisión.\n    fitted_params(mach).tree\n    ```\n    \n    ::: {.cell-output .cell-output-stderr}\n    ```\n    [ Info: Training machine(DecisionTreeClassifier(max_depth = 4, …), …).\n    ```\n    :::\n    \n    ::: {.cell-output .cell-output-display execution_count=184}\n    ```\n    alcohol < 10.62\n    ├─ meses_barrica < 8.5\n    │  ├─ acided_volatil < 0.3125\n    │  │  ├─ acided_volatil < 0.2025\n    │  │  │  ├─  ☹️  (408/496)\n    │  │  │  └─  ☹️  (1095/1172)\n    │  │  └─ meses_barrica < 5.5\n    │  │     ├─  ☹️  (1334/1345)\n    │  │     └─  ☹️  (51/58)\n    │  └─  😊  (25/25)\n    └─ meses_barrica < 12.5\n       ├─ cloruro_sodico < 0.0455\n       │  ├─ alcohol < 12.55\n       │  │  ├─  ☹️  (751/1160)\n       │  │  └─  😊  (185/286)\n       │  └─ meses_barrica < 10.5\n       │     ├─  ☹️  (552/629)\n       │     └─  😊  (25/43)\n       └─ alcohol < 14.45\n          ├─  😊  (105/105)\n          └─  ☹️  (1/1)\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  ¿Cuál es la importancia de cada variable en el modelo?\n\n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    Usar la función `feature_importances` del paquete [`DecisionTree`](https://juliaai.github.io/DecisionTree.jl/) para calcular la importancia de cada variable.\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {#3da4139b .cell execution_count=38}\n    ``` {.julia .cell-code}\n    # Calculamos la importancia de cada variable.\n    feature_importances(mach)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=185}\n    ```\n    13-element Vector{Pair{Symbol, Float64}}:\n                  :alcohol => 0.5303315899204789\n            :meses_barrica => 0.26854115615561525\n           :acided_volatil => 0.1040970236546446\n           :cloruro_sodico => 0.09703023026926123\n                     :tipo => 0.0\n              :acided_fija => 0.0\n            :acido_citrico => 0.0\n          :azucar_residual => 0.0\n     :dioxido_azufre_libre => 0.0\n     :dioxido_azufre_total => 0.0\n                 :densidad => 0.0\n                       :ph => 0.0\n                 :sulfatos => 0.0\n    ```\n    :::\n    :::\n    \n    \n    :::\n\na.  Predecir la calidad de los 10 primeros vinos del conjunto de ejemplos.\n\n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    Usar la función `predict` del paquete [`DecisionTree`](https://juliaai.github.io/DecisionTree.jl/) para predecir las probabilidades de pertenecer a cada clase un ejemplo o conjunto de ejemplos.\n\n    Usar la función `predict_mode` del paquete [`DecisionTree`](https://juliaai.github.io/DecisionTree.jl/) para predecir la clase de un ejemplo o conjunto de ejemplos.\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    Primero calculamos las probabilidades de cada clase.\n\n\n    ::: {#eea34909 .cell execution_count=39}\n    ``` {.julia .cell-code}\n    MLJ.predict(mach, X[1:10, :])\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=186}\n    ```\n    10-element CategoricalDistributions.UnivariateFiniteVector{OrderedFactor{2}, String, UInt32, Float64}:\n     UnivariateFinite{OrderedFactor{2}}( ☹️ =>0.992,  😊 =>0.00818)\n     UnivariateFinite{OrderedFactor{2}}( ☹️ =>0.823,  😊 =>0.177)\n     UnivariateFinite{OrderedFactor{2}}( ☹️ =>0.992,  😊 =>0.00818)\n     UnivariateFinite{OrderedFactor{2}}( ☹️ =>0.992,  😊 =>0.00818)\n     UnivariateFinite{OrderedFactor{2}}( ☹️ =>0.647,  😊 =>0.353)\n     UnivariateFinite{OrderedFactor{2}}( ☹️ =>0.647,  😊 =>0.353)\n     UnivariateFinite{OrderedFactor{2}}( ☹️ =>0.647,  😊 =>0.353)\n     UnivariateFinite{OrderedFactor{2}}( ☹️ =>0.878,  😊 =>0.122)\n     UnivariateFinite{OrderedFactor{2}}( ☹️ =>0.992,  😊 =>0.00818)\n     UnivariateFinite{OrderedFactor{2}}( ☹️ =>0.992,  😊 =>0.00818)\n    ```\n    :::\n    :::\n    \n    \n    Y ahora predecimos la clase.\n\n\n    ::: {#2b2723f2 .cell execution_count=40}\n    ``` {.julia .cell-code}\n    predict_mode(mach, X[1:10, :])\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=187}\n    ```\n    10-element CategoricalArray{String,1,UInt32}:\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n     \" ☹️ \"\n    ```\n    :::\n    :::\n    \n    \n    :::\n:::\n\n",
    "supporting": [
      "07-arboles-decision_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}